=== PDF文件: Bridging Model Predictive Control and Deep Learning for Scalable Reachability Analysis.pdf ===
=== 时间: 2025-07-22 09:41:40.215582 ===

请你只输出如下JSON，所有字段都必须有，且每个“关键词”字段只允许输出一个中文词语（不能是英文，不能是多个，不能是短语，不能有逗号、分号、空格），否则视为不合格。不要输出任何解释或正文，只输出JSON。
{
  "论文标题": "",
  "研究主题关键词": "",
  "应用场景关键词": "",
  "主要方法关键词": "",
  "创新点关键词": "",
  "主要结论关键词": ""
}
内容：Bridging Model Predictive Control and Deep
Learning for Scalable Reachability Analysis
Zeyuan Feng1, Le Qiu2, and Somil Bansal1
AbstractHamilton-Jacobi (HJ) reachability analysis is a
widely used method for ensuring the safety of robotic systems.
Traditional approaches compute reachable sets by numerically
solving an HJ Partial Differential Equation (PDE) over a grid,
which is computationally prohibitive due to the curse of dimen-
sionality. Recent learning-based methods have sought to address
this challenge by approximating reachability solutions using
neural networks trained with PDE residual error. However, these
approaches often suffer from unstable training dynamics and
suboptimal solutions due to the weak learning signal provided
by the residual loss. In this work, we propose a novel approach
that leverages model predictive control (MPC) techniques to
guide and accelerate the reachability learning process. Observing
that HJ reachability is inherently rooted in optimal control,
we utilize MPC to generate approximate reachability solutions
at key collocation points, which are then used to tactically
guide the neural network training by ensuring compliance with
these approximations. Moreover, we iteratively refine the MPC-
generated solutions using the learned reachability solution, miti-
gating convergence to local optima. Case studies on a 2D vertical
subscriber system demonstrate that bridging MPC with deep
learning yields significant improvements in the robustness and
accuracy of reachable sets, as well as corresponding safety
I. INTRODUCTION
Hamilton-Jacobi (HJ) reachability analysis is one of the
most widely used tools for providing formal safety assurances
for autonomous systems. It characterizes the unsafe states of
the system via Backward Reachable Tube (BRT)  the set
of all initial states from which a system failure is inevitable.
system. Along with the safe set, reachability analysis provides
a safety controller for the system that can be used as it is
or alongside a nominal (potentially data-driven) controller to
maintain safety.
In HJ reachability, the BRT computation is framed as
an optimal control problem that results in solving a certain
Hamilton-Jacobi-Bellman PDE (HJB-PDE) [29, 26]. Solving
this PDE yields a safety value function that implicitly repre-
sents both the BRT and the safety controller. Consequently,
a number of methods have been developed to solve the HJB
PDE. Traditional methods solve HJB PDE numerically over
1Authors are with the Department of Aeronautics and Astronautics at
Stanford University, USA :{zeyuanf, somil}stanford.edu.
2Author is with the Department of Electrical Engineering at Tsinghua
This research is supported in part by the DARPA Assured Neuro Symbolic
Learning and Reasoning (ANSR) program and by the NSF CAREER program
a grid, which suffers from the so-called curse of dimension-
ality . Specifically, the computation scales exponentially
with the system dimension, making systems of more than
6D intractable. Many techniques for speeding up reachabil-
ity analysis put restrictions on the type of system allowed
andor assign predefined shapes to the safe set (e.g. ellipsoids,
polytopes) [8, 7, 14, 19, 24, 25, 11, 15]. However, comput-
ing reachable sets for general nonlinear systems remains a
challenge. This motivated the recent development of learning-
based methods to approximate the HJB-PDE solution .
One line of research leverages Reinforcement Learning (RL)
to approximate the safety value function, achieving impressive
performance improvements [13, 17, 18, 20]. Another line
of work [2, 34], which this paper aims to enhance, learns
value function via self-supervised learning by minimizing the
residuals of HJB-PDE. The latter set of approaches, termed
DeepReach variants, are rooted in recent advances in Physics-
Informed Machine Learning [31, 21] and have the theoretical
advantage of recovering the exact HJB-PDE solution as the
training loss converges to zero . However, in practice,
these methods often converge to suboptimal solutions due
to the weak learning signal provided by the residual loss
alone. Additionally, as we will demonstrate, this can result
in non-physical solutions, where the learned value function
significantly deviates from the ground truth, even when train-
ing loss appears low. Consequently, these methods exhibit
instability and inaccuracies, especially for stiff dynamical
systems or problems with complex boundary conditions (i.e.,
intricate safety specifications). To combat these challenges,
leverages the Hopf formula to generate HJB-VI solutions
for linearized dynamics and learns the solution using semi-
supervision. However, this method does not synthesize value
function labels for the original nonlinear dynamics and relies
heavily on the quality of the Hopf solutions. Another method
imposes exact safety specification , but it offers limited
systems remains a key challenge.
To overcome these challenges, we propose a framework
that leverages approximate reachability solutions to guide
the learning of the safety value function. Our approach is
inspired by the success of incorporating data-driven loss terms
in Physics-Informed Neural Networks (PINNs) , which
effectively anchors trial solutions at key collocation points
alongside PDE residuals, thereby accelerating convergence
and guiding learning toward feasible solutions. Specifically,
building on the optimal control foundations of HJ reachabil-
Fig. 1: We propose a framework that efficiently generates approximate safety value function datasets using a sampling-based MPC approach
and integrates these data labels to guide the learning of reachability solutions for high-dimensional autonomous systems. The learned value
function is then verified using conformal prediction, providing probabilistic safety assurances for the system under the induced safe policy.
ate approximate solutions for high-dimensional reachability
problems. These solutions serve as semi-supervised labels
to improve value function learning. Our method is designed
to be highly parallelizable on GPUs, allowing for efficient
synthesis of large datasets. Moreover, we provide an algorithm
to iteratively update the MPC dataset during training using the
learned DeepReach policy, progressively improving accuracy
and stability of the learned value function. By combining
sampling-based MPC with DeepReach-style self-supervised
leveraging MPC for efficient and structured dataset gen-
eration and DeepReach for reliable safety assurances. To
A novel data-generation approach that efficiently com-
putes approximate HJB-VI solutions using an MPC-based
sampling method.
A hybrid training algorithm that balances residual loss
with data-driven supervision to improve the convergence
of value function learning, while iteratively refining the
MPC dataset during training.
Demonstration of the proposed approach on four chal-
lenging reachability problems: a 2D vertical drone avoid-
ing ground and ceiling, a 13D quadrotor avoiding a
cylindrical obstacle, a 7D F1Tenth car navigating a track,
and a 40D publisher-subscriber system, highlighting a
significant improvement in accuracy and stability of value
function learning.
II. PRELIMINARIES
In this section, we formulate the reachability problem and
provide a brief background on HJ reachability.
A. Problem Setup
We consider a dynamical system with time-invariant, pos-
sibly nonlinear, dynamics: x  f(x, u), where x Rn is
the state and u U Rnu is the control input. The safety
requirement is defined by a Lipschitz-continuous function
i.e., L  {x : l(x) 0}. For example, in a robotic navigation
signed distance function to these obstacles.
Our primary goal in this work is to compute the BRT of
the system, denoted as B, which consists of all initial states
from which the system will inevitably enter the failure set
L within the time horizon [0, T], regardless of the control
strategy. Formally:
where u()
the control policy u(), starting from initial state x at time t.
to fail. The complement of the BRT, S : BC, represents the
safe set for the system, i.e., the initial states from which it is
possible to avoid entering the failure region. Correspondingly,
our second objective is to synthesize a safe control policy u()
that ensures the system remains in the safe set S and does not
enter B, whenever possible.
B. Computation of BRT Using HJ Reachability
In HJ reachability, the computation of B is formulated as a
continuous-time optimal control problem, with the following
cost function:
J(x, t, u())  min
[t,T ] l
failure set along the state trajectory starting at x and governed
by u() over [t, T]. The value function and the optimal
controller can be obtained by maximizing this cost function:
V (x, t)
u()U[t,T ]
J(x, t, u()),
u()  arg
u()U[t,T ]
J(x, t, u()).
Once V (x, t) is computed, the BRT is given by the sub-zero
level set of the value function:
distance to the failure set is negative under the optimal control.
In other words, the system must have entered the failure set
at some time in [t, T] and hence these states are contained in
the BRT.
The value function V (x, t) can be computed using the prin-
ciple of dynamic programming which results in the following
Hamilton-Jacobi-Bellman Variational Inequality (HJB-VI):
min{DtV (x, t)  H(x, t), l(x) V (x, t)}  0,
V (x, T)  l(x),
H(x, t)  max
uU V (x, t) , f(x, u),
where the second line specifies the boundary condition,
H(x, t) is the Hamiltonian, Dt represents the time derivatives
and denotes the spatial derivatives of the value function. For
more details on HJ reachability analysis and the derivation of
With the value function in hand, the optimal safety con-
troller to keep the system outside the BRT is given by:
u(x, t)  arg max
u V (x, t), f(x, u).
For low-dimensional systems, HJB-VI can be solved nu-
merically on a state-space grid using various toolboxes [28,
methods suffer from the curse of dimensionality; consequently,
learning-based methods have been proposed 
