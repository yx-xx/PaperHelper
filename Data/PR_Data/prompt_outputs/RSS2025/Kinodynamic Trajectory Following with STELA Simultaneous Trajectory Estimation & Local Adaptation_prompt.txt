=== PDF文件: Kinodynamic Trajectory Following with STELA Simultaneous Trajectory Estimation & Local Adaptation.pdf ===
=== 时间: 2025-07-22 09:42:24.878752 ===

请你只输出如下JSON，所有字段都必须有，且每个“关键词”字段只允许输出一个中文词语（不能是英文，不能是多个，不能是短语，不能有逗号、分号、空格），否则视为不合格。不要输出任何解释或正文，只输出JSON。
{
  "论文标题": "",
  "研究主题关键词": "",
  "应用场景关键词": "",
  "主要方法关键词": "",
  "创新点关键词": "",
  "主要结论关键词": ""
}
内容：Kinodynamic Trajectory Following with STELA:
Simultaneous Trajectory Estimation  Local Adaptation
Edgar Granados, Sumanth Tangirala, Kostas E. Bekris
Dept. of Computer Science, Rutgers University, NJ, USA
{eg585, st1122, kb572}cs.rutgers.edu
Fig. 1: Middle: STELA execution on a real MuSHR robot. The middle image is a composite from 2 top-down cameras used for localization,
covering a 7.6mx2.3m workspace. The robot follows a trajectory computed by a planner with knowledge of the obstacles (rocks and boxes)
but no knowledge of the ramp, affecting execution. Top and Bottom: i) STELA estimation and plan when the robot is on the unknown ramp;
ii) the robot recovers from the ramp and avoids an obstacle; iii) STELA adapts the plan to follow the planned trajectory while avoiding
another obstacle; iv) the robot reaches the end of the plan without collisions. Rviz visualization includes obstacles, planned trajectory (green),
forward horizon (white), and history (cyan). Stars indicate corresponding states between the visualization and the real robot.
AbstractState estimation and control are often addressed
execution errors, and discrepancies between the planning model
and reality. Simultaneous control and trajectory estimation
using probabilistic graphical models has been proposed as a
unied solution to these challenges. Previous work, however,
relies heavily on appropriate Gaussian priors and is limited to
holonomic robots with linear time-varying models. The current
research extends graphical optimization methods to vehicles
with arbitrary dynamical models via Simultaneous Trajectory
Estimation and Local Adaptation (STELA). The overall approach
initializes feasible trajectories using a kinodynamic, sampling-
based motion planner. Then, it simultaneously: (i) estimates the
past trajectory based on noisy observations, and (ii) adapts the
controls to be executed to minimize deviations from the planned,
feasible trajectory, while avoiding collisions. The proposed factor
graph representation of trajectories in STELA can be applied
for any dynamical system given access to rst or second-
order state update equations, and introduces the duration of
execution between two states in the trajectory discretization as an
optimization variable. These features provide both generalization
and exibility in trajectory following. In addition to targeting
computational efciency, the proposed strategy performs incre-
mental updates of the factor graph using the iSAM algorithm
and introduces a time-window mechanism. This mechanism
allows the factor graph to be dynamically updated to operate
over a limited history and forward horizon of the planned
trajectory. This enables online updates of controls at a minimum
of 10Hz. Experiments demonstrate that STELA achieves at least
comparable performance to previous frameworks on idealized
vehicles with linear dynamics. STELA also directly applies to
and successfully solves trajectory following problems for more
complex dynamical models. Beyond generalization, simulations
assess STELAs robustness under varying levels of sensing and
execution noise, while ablation studies highlight the importance of
different components of STELA. Real-world experiments validate
STELAs practical applicability on a low-cost MuSHR robot,
which exhibits high noise and non-trivial dynamics.
I. INTRODUCTION
This paper focuses on achieving reliable simultaneous tra-
jectory estimation and following for kinodynamic systems
in static, partially modeled environments, under sensing and
actuation uncertainty as well as reality gaps for the planning
robot model. It proposes Simultaneous Trajectory Estimation
and Local Adaptation (STELA), a graphical optimization
framework that builds on top of prior methods for simul-
taneous state estimation and control based on factor graph
representations [7, 22]. It extends: (i) the efcacy of such
approaches by increasing the success rate of returning feasible,
collision-free trajectories, even under signicant noise, (ii)
their applicability to more general dynamical systems, and (iii)
achieves improved computational efciency.
for low-cost platforms, such as the MuSHR robot used in
this work and shown in Fig. 1, can be challenging due to
observation noise, high actuation errors, and a signicant re-
ality gap of the underlying models. For robots with signicant
rough approximations. This results in signicant deviations
from the planned trajectory during execution. While system
identication [16, 3, 44] can reduce the model gap, it does
not fully address it. This is often because the environment is
also partially observable. For instance, a oor map indicating
obstacles may be available, but not all aspects of the environ-
ment are modeled, such as friction coefcients and traversable
An approach to deal with the model gap is to use feedback
controllers for trajectory following, given the latest state
estimate [12, 33]. However, observation and actuation noise
can lead to errors in state estimation, where the focus is often
State estimation noise can compound to result in deviations
in trajectory following. In addition, most trajectory following
controllers ignore obstacles and are executed independently
from the state estimation process, so signicant trajectory
deviations also lead to collisions.
An alternative strategy is replanning online, e.g., with
sampling-based motion planners (SBMP) [21, 27, 23] or trajec-
tory optimization planners [36, 41, 20, 42]. SBMPs can even-
tually provide high-quality, feasible solutions, but typically it
is not possible to achieve high-frequency replanning rates for
dynamical systems (e.g., at or above 10Hz) to deal with the
model gap without a trajectory follower. Optimization-based
approaches can sometimes provide solutions fast, but due to
their local nature, they may get stuck in local minima if not
properly initialized and can be parameter sensitive.
Factor Graph Optimization: A promising direction for
addressing the above issues, which this paper builds on, is
probabilistic graphical models based on factor graphs and
corresponding optimization methods . They can simulta-
neously solve trajectory estimation and control or planning
challenges as a unied problem [22, 29]. These solutions
perform smoothing instead of ltering, i.e., they estimate the
entire most likely trajectory the robot has followed given all
the available observations. Smoothing often leads to improved
estimates relative to ltering. Smoothing solutions were tradi-
tionally slower to compute, but the progress with factor graph
optimization tools has allowed such problems to be solved
online. Furthermore, these methods are able to adapt the robot
controls simultaneously to achieve collision avoidance by
taking obstacles into account during the control optimization
(i) rely heavily on Gaussian priors regarding the underlying
probabilistic processes, which may not reect the true uncer-
tainty of the system, and (ii) are limited to holonomic robots
given linear-time varying models, reducing their applicability
on non-holonomic vehicles with signicant dynamics. Further-
frequencies to maximize robustness to disturbances.
Proposed
STELA framework rst calls an asymptotically optimal SBMP
for kinodynamic systems [23, 27] in order to acquire a feasible,
collision-free trajectory given the available planning model. A
key aspect of STELA is that it aligns the output of the SBMP
with the consecutive trajectory optimization via a common
graphical representation. Factor Graphs (FGs) are a natural
interface for this purpose. In particular, the underlying motion
graph produced by an SBMP is transformed by the proposed
approach into a FG. Then, STELA uses the extracted FG to
simultaneously perform: (a) smoothing of the past trajectory
given the latest observations, and (b) dynamically adapting the
controls to be executed so as to minimize deviations from the
SBMP trajectory, while avoiding collisions.
The proposed FG representation in STELA, illustrated in
Fig. 5, is general in nature and can be applied to any dynamical
system given access to rst or second-order state update
equations. It does not make any assumptions in terms of
Gaussian priors for the underlying processes, and it does not
require linear-time varying models, which limit applicability to
idealistic holonomic vehicles. Instead, it only uses the solution
achieved by the SBMP as a prior and employs non-linear
factors representing the systems dynamics. The proposed FG
also includes the duration of execution between two states in
the trajectory discretization as a variable to be optimized. This
allows the optimizer to stretch or contract edges depending
on the estimated state of the system. The combination of
these features provides generalization, in terms of the range of
the dynamical systems that can be modeled, as well as high
success rate in nding a collision-free path even when the
robot has deviated from the planned solution.
For increased computational efciency, the proposed strat-
egy allows for the use of incremental updates of the FG by:
(a) using the iSAM2 optimizer, and also (b) introducing a slid-
ing window mechanism. In particular, given the adopted FG
representation and seeking the Maximum a posteriori (MAP)
solution via incremental inference, the iSAM2 optimizer incor-
porates high-frequency observations, adapting the underlying
graph in a computationally efcient manner, obtaining the
most likely estimate of the robots past trajectory. The sliding
window mechanism allows the factor graph to be dynamically
updated at high frequency by operating over a limited past
history and forward horizon of the planned trajectory. The
combination of these features enables online control updates
to be generated at a minimum of 10Hz and on average at 20-
tion for different environments and different levels of observa-
tion and actuation noise both for an idealized holonomic model
used in prior work as well a second-order dynamical system
not addre
