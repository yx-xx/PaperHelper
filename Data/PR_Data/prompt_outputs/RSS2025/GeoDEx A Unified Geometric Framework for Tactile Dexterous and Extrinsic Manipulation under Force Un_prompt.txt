=== PDF文件: GeoDEx A Unified Geometric Framework for Tactile Dexterous and Extrinsic Manipulation under Force Un.pdf ===
=== 时间: 2025-07-22 15:49:56.588885 ===

请你只输出如下JSON，所有字段都必须有，且每个“关键词”字段只允许输出一个最核心的最有代表性的中文关键词，要中文关键词（不能是英文，不能是多个，不能有逗号、分号、空格），否则视为不合格。不要输出任何解释或正文，只输出JSON。
{
  "论文标题": "",
  "研究主题关键词": "",
  "应用场景关键词": "",
  "主要方法关键词": "",
  "创新点关键词": "",
  "主要结论关键词": ""
}
内容：Extrinsic Manipulation under Force Uncertainty
Sirui Chen1,, Sergio Aguilera Marinovic2, Soshi Iba2 and Rana Soltani Zarrin2
AbstractSense of touch that allows robots to detect con-
tact and measure interaction forces enables them to perform
challenging tasks such as grasping fragile objects or using
tools. Tactile sensors in theory can equip the robots with such
capabilities. However, accuracy of the measured forces is not
on a par with those of the force sensors due to the potential
calibration challenges and noise. This has limited the values these
sensors can offer in manipulation applications that require force
control. In this paper, we introduce GeoDEx, a unified estimation,
as plane, cone and ellipsoid, which enables dexterous as well
as extrinsic manipulation in the presence of uncertain force
readings. Through various experimental results, we show that
while relying on direct inaccurate and noisy force readings from
tactile sensors results in unstable or failed manipulation, our
method enables successful grasping and extrinsic manipulation
of different objects. Additionally, compared to directly running
optimization using SOCP (Second Order Cone Programming),
planning and force estimation using our framework achieves a
14x speed-up.
I. INTRODUCTION
Dexterous manipulation capabilities are essential for robots
to function effectively in human-centered environments, such
as helping with tasks that involve handling different objects or
tools . Planning and control methods for such tasks that can
enable robust and generalizable contact-rich manipulation need
contact force information. While force sensors can provide
accurate force readings, physical limitations associated with
embedding the sensors into the robotic hands, as well as lack
of high-resolution tactile information limit the use of these
sensors. On the other hand, recent developments in tactile
sensors resulted in ever lighter and higher resolution sensors,
which can be installed on different robot end-effectors such
as fingertips of a dexterous hand. However, it is still quite
challenging and expensive to develop tactile sensors that can
provide accurate force readings, especially in both normal and
shearing directions. While developing such tactile sensors is
manipulation require relying on the available tactile sensors
with the aforementioned shortcomings. Previous works have
shown that even using binary  or highly discretized
information from tactile sensors can already significantly im-
prove performance during in-hand object reorientation. Thus,
it would be valuable if we could exploit full tactile sensor
readings to perform force control for dexterous manipulation.
1Computer Science Department, Stanford University, Stanford, CA 94305,
USA. ericcsrstanford.edu
2Honda Research Institute USA, San Jose, CA 95134, USA. corresponding
ranasoltanizarrinhonda-ri.com
This work was conducted during an internship at Honda Research Institute
In this paper, we propose GeoDEx, a unified framework that
fully utilizes imperfect tactile sensor readings and can be used
for force planning and control in dexterous grasping and ex-
trinsic manipulation. GeoDEx formulates finding equilibrium
forces on multi-point contact problems as optimization prob-
lems with different geometric primitives such as planes, cones,
and ellipsoids. It is designed to handle sensor noise as well
as lack of access to shearing force reading. Through various
control based dexterous grasping of different objects with
various numbers of fingers as well as extrinsic manipulation
such as pivoting a cuboid and a screwdriver.
II. RELATED WORK
A. State of Tactile Sensors
Tactile sensor arrays have shown great potential in robot
some works focus on building tactile gloves to collect force
data from humans to teach robots
[5, 6], other works use
tactile sensors to directly help robots to sense and control
contact in applications such as dense packing , grasping
fragile objects  and pouring water with bimanual dexterous
hand . As one of the state-of-the-art tactile sensor arrays,
Xela sensors  is compact, deformable, and can provide 3D
force direction and magnitude readings with contact locations.
They have been applied to slip prediction and contact state
classification [11, 12]. However, force readings from those
sensors are inaccurate due to their sensitivity to magnetic
interference and the gap between taxels . Another flexible
tactile sensor array, Touchlab sensor  uses small piezo-
electric sensor arrays to detect 1D force in the normal direc-
less interference. However, we found its force readings are still
far less accurate compared to traditional force torque sensors
and directly using its data to perform force control will often
result in control failure.
B. Utilizing Tactile Readings
Given noisy and sparse tactile sensor readings, prior meth-
ods focus on estimating force and contact points from raw data
using analytical models such as perturbation observer ,
sensor deformation analysis , and predictive models .
For camera-based tactile sensors,  has built depth maps
from raw images and regressive analytical models to extract
force data from depth maps. With the help of more accurate
force-torque sensors to provide data labeling, learning-based
methods have also been applied to map raw sensor data into
force readings [18, 19]. Compared to these methods, instead
of directly working with raw sensor reading, our method
serves as a post-processing stage after having these inaccurate
force readings extracted from raw sensor data. Processed force
readings may still be different from ground truth contact force
value but can be directly used by downstream controllers to
perform tasks such as grasp force control in dexterous grasping
and force control in extrinsic manipulation.
Sharing the same spirit, another branch of work focuses on
extracting salient information from tactile sensors.  uses
inexpensive film pressure sensors to provide binary contact
signals for helping dexterous manipulation.  only extract
3-bit discretized force direction from fingertip tactile sensors
for dexterous object in-hand reorientation. Other works also
simplify tactile sensor readings to only distinguish sliding
and slipping using tactile sensor signals  or detect binary
contact information.. Our work not only can detect contact
from tactile sensors, but it can also provide relative force
magnitudes at different contact points, which can be used for
the challenging tasks mentioned above.
C. Tactile-Enabled Dexterous Manipulation
Utilizing force information in planning and control for
dexterous manipulation enables more robust manipulation by
considering the quality of grasps in realizing object mo-
tions [22, 1]. Similarly, successful extrinsic manipulation, such
as tilting and flipping objects, requires precise control of con-
tact forces to prevent undesired sliding [23, 24, 25, 26]. Most
of the existing works focus on contact force and position plan-
ning and validate the method in simulation only [23, 25, 26].
performed hardware experiments on flipping and rotating
different objects; however, their work relies on a complex
manipulator setup, including both a force-torque sensor and
a bubble tactile sensor, and interacts with the objects only
using a single rigid object. Our work enables a dexterous
hand equipped with tactile fingertips to directly interact with
different objects, which opens up different capabilities of
extrinsic manipulation as we can locate and control multiple
contacts with different fingers.
III. FORMULATION AND METHODOLOGY
Fig. 1: System diagram of our proposed method
Our framework consists of three major components as
shown in Fig.1: a force planner that generates robust plans for
TABLE I: Nomenclature of the Proposed Framework
Notation
Number of extrinsic contacts
Number of intrinsic contacts
ith contact normal
All contact forces
f R(nine)3
Gravity wrench
Extrinsic contact set
Intrinsic contact set
Space of contact forces
Force equilibrium constraints matrix
FE-basis
Coordinate in FE-basis
Constraint matrix
Measurement cone edge weight
Coordinate transformation matrix
the finger-object contacts with consideration of sensor error; a
force estimator that uses tactile sensor reading, the robot state
and the object pose to estimates all contact forces that would
achieve force equilibrium under quasi-static assumptions; and
a admittance controller that can track the planned kinematics
and force trajectories robustly using estimated contact forces.
In this section, we will first define the necessary concepts
for our theoretical framework, and then use these concepts
to address the problems of how to obtain force estimation
and perform force planning with force observation uncertainty.
We will end by describing the control architecture of our
framework. The main notations used in this section are defined
in Tab. I
A. Definitions
We consider manipulation using a multi-finger dexterous
hand; each fingertip is wrapped with a tactile sensor array
that can provide contact location and contact force in the
normal direction. We first define a contact c on the object
as a tuple of contact position, contact normal, and contact
force. We denote the set of contacts between objects and
tactile-enabled fingertips as intrinsic contacts Cint. For the
set of contacts between the object and the environment or
other parts of the dexterous hand without tactile sensors, we
denote it as extrinsic contact set Cext. We only consider quasi-
static manipulation under gravity without other external forces,
where the object is in force equilibrium, and all contact forces
should cancel gravity all the time. We define key concepts for
our paper as follows:
Definition 1 (Space of contact forces). Given a set of contact
points including ni intrinsic and ne extrinsic contact points,
we stack all forces into a vector f R(nine)3, we define
space of all possible forces as space of contact force F.
Definition 2 (FE-plane). All forces that can balance the
objects gravity lie in a hyperplane in F; we define this
hyperplane as a Force-Equilibrium plane (FE-plane). Forces
on FE-plane satisfy linear force equilibrium constraints:
Where g R6 is gravity wrench and constraint matrix
Afe has the shape of ((ni  ne)  3, 6). As the number
of effective constraints imposed on space of contact force is
rank(Afe), FE-plane has the dimension of dfe  (ni  ne)
3 rank(Afe).
Proposition 1 (FE-basis). On the FE-plane, we can construct
a set of orthonormal vectors that define a basis Bfe
{b1, ..., bdfe}, bi R(nine)3. Using this FE-basis, we can
represent any force vector on the FE-plane using a weighted
sum of these basis vectors ffe  Pdfe
wibi  f0, where
f0 is a bias term, a particular solution on force equilibrium
plane and the weight vector would be the FE-plane coordinate
(FE-coord) xfe. Using the FE-basis we can construct a
matrix combining subspace projection matrix and coordinate
transformation matrix: Pfe  [b1; ...; bdfe] that project any
vector in force space to FE-plane and express it in FE-
Definition 3 (Constraint convex set). The constraint convex
set includes friction cone constraints and minimum force con-
straints for intrinsic contacts. Using a pyramidal friction cone,
all constraints can be defined as linear inequality constraints
in force coordinates; hence, the interior of the constraint set
is always convex.
Where constraint matrix is constructed from stacking linear
friction cone constraints and linear minimum force constraints
minf] and d  [0[4(neni)], fmin]. We can also
represent this constraint convex set in FE-coordinate when
setting Cfe  PfeC:
Cfexfe d
Proposition 2 (Perservation of force equilibrium). For any
force f F on FE-plane, applying a delta force f on the
plane will result in a new force f  f f still on FE-plane.
vectors with the same basis, adding these two vectors will
also result in a vector in the plane spanned by the same basis.
For intrinsic contact, we can only measure the magnitude
of non-negative contact force along the contacts normal di-
rection. Therefore, assume there are only intrinsic contacts; all
possible measurements lie inside a cone in force space. When
extrinsic contacts are present, we can also assume there is a
virtual sensor attached to the contact point that can measure
force in the normal direction, but we cannot obtain readings
from those sensors. Mathematically, we represent all possible
measurements on all contact points as measurement cone (M-
Definition 4 (M-Cone). Let {n1, n2, .., nnine} be the set of
contact normal vector. We construct M-Cone in force space as
the weighted summation of contact normal vectors:
M  {f : m, f
mjExtend(nj)}
Extend operator writes contact normal in full force vector
tact normal are set to ni while other elements are set to
zero. For example, in the case there are 3 contact points
Extend(n1)  [nx
2; 0; 0; 0]. The measurement cone must go
through the origin in force space when all weights mi  0, i
Fig. 2: FE-plane, M-Cone and Constraint convex set
Fig.2 provides a visualization on the FE-plane, M-Cone and
constraint convex set in 3D as conceptual illustration.
B. Force Estimation
Built upon these concepts, we can solve both force estima-
tion and planning problems for different scenarios when there
are different numbers of intrinsic and extrinsic contact points.
Problem 1 (Force estimation for dexterous grasping). We con-
sider the problem of finding the best force estimate in dexterous
grasping. This problem involves only intrinsic contacts and to
achieve any target wrench, at least two intrinsic contact points
are needed (ni 2)
To solve this problem, we need to find a force fest on
the FE-plane that has a minimum Euclidean distance to the
observed normal forces fm on M-Cone. We can achieve this
by projecting fm on to FE-plane:
xest  Pfe(fm f0)
fest  P T
fexest  f0
Although under ideal conditions, an observation is obtained
by projecting from the FE-plane to the measurement cone.
requires back-tracing projection to FE-plane, which will mag-
nify normal force measurement error. Our projection allows
changes to normal force magnitude and practically gives
similar results as we will show in the experimental section.
Problem 2 (Force estimation for extrinsic manipulation). In
extrinsic manipulation, there exist non-zero extrinsic contact
points (ne > 0), which dont have normal force readings.
We need to estimate intrinsic forces based on intrinsic and
extrinsic contact locations as well as normal force readings
from intrinsic contacts.
Only from intrinsic force measurement we can no longer
obtain a point of measurement on M-Cone; instead, all pos-
sible measurement spans a sub-space cone on measurement
Fig. 3: Illustration of measurement sub-space cone Assume two
contact points are involved, one intrinsic, one extrinsic. Orange
ray shows measurement sub-cone as we can only measure force
magnitude at the intrinsic contact location.
cone as shown in Fig.3. To find the best force estimate, we
need to find a force fest on the FE-plane that is close to this
sub-space cone. Meanwhile, as extrinsic contact points only
provide minimum contact forces to counteract gravity and
intrinsic contact forces, such as intrinsic contact forces and
close to the origin. Therefore, to estimate contact forces, we
need to solve a quadratic program (QP) that minimizes the
sum of the distance to the sub-space cone and the origin. To
lower the complexity of solving QP, we represent fest using
FE-coord xest, thus distance to the origin can be expressed as:
dorigin  P T
To obtain the distance to the sub-space cone, we first need to
construct basis Bsub for this measurement sub-space cone. As
each extrinsic contact point contributes to one independent
DoF in the sub-space cone, we first compute ne linearly
independent force vectors with each one containing non-zero
terms from one of the extrinsic contact normals and zeros
in other directions f i
sub. Bsub can be constructed from {f i
using QR decomposition. After obtaining force vectors, we can
find a weight w of linear combination wif i
sub  ...  wif ne
and force estimate can be expressed as a projection of this
linear combination onto the FE-plane fest  Pfe
To get the best estimate, we need to solve w that minimizes the
distance to the origin and subspace plane spanned by {f i
w fest  Bsubfest
s.t.fest  Pfe
C. Force Planning
Using above mentioned method, we can obtain a force
measurement that is guaranteed to achieve force closure but
may have errors compared to ground truth force. If we have
prior knowledge of the noise range of each tactile sensor,
we can bound the error using an ellipsoid on FE-plane.
extrinsic manipulation, we need to consider the potential error
and make a robust plan that remains feasible regardless.
Definition 5 (Trusted measurement ellipsoid). For each con-
tact point, assume normal force measurement error is inde-
pendent and obeys Gaussian distribution i N(i, 0). If
we consider measurement within 1 from ground truth as a
trusted region, all trusted measurements can be parameterized
as an ellipsoid on M-cone
D  Diag(12
When there are extrinsic contacts, we set the variance of
extrinsic contacts to infinity. While the quadratic formula still
infinitely elongated.
Proposition 3. (Propagating ellipsoid to FE-plane) Given an
ellipsoid with center c expressed in M-cone basis, we can
project it onto the force equilibrium plane using a projection
matrix E
(xfe c)T M(xfe c)
M  (E)T DE
To construct measurement projection matrix M we consider
the following: Any force vector on measurement cone can be
expressed as f  Pnine
miExtend(ni)  NMconem
where N is constructed from extended normal vectors. We
project this force to FE-plane:
xfe  PfeNMconem
As the system is under-determined, we need to set
QE; Q, R  QR(ET ) (QR decomposition) to get minimum
norm solution when computing the projection.
Problem 3. (Force planning for dexterous grasping) Given a
set of intrinsic contact points, planning a safe dexterous grasp
requires solving center c of a trusted measurement ellipsoid on
the force-closure plane such that the entire ellipsoid satisfies
friction cone and minimum force constraints.
s.t.xfe, (xfe c)T M(xfe c) 1
Cfexfe d
Directly considering the analytical ellipsoid is challenging,
thus we rewrite constraints of xfe as constraints on c, for each
linear constraint of from constraint matrix Cfe
Cfe[i]xfe di
It can be rewritten as
Cfe[i]T c
Cfe[i]T M 1 Cfe[i] bi
We can then write constraints on the ellipsoid center as:
Cfe[i]  Cfe[i]
Cfe[i]T M 1 Cfe[i]
Fig. 4: Block diagram of the control system.
lem of c
s.t. Cfec b
The force for each fingertip can be obtained by projecting
optimal x
fe back to the space of contact force.
Problem 4. (Force planning for extrinsic manipulation) Given
a set of intrinsic contact points and a set of extrinsic contact
similar to 11 with a cost term added to minimize total force
magnitude
s.t.xfe, (xfe c)T M(xfe c) 1
Cfexfe b
To solve the problem, we can apply a similar re-formulation
as in 15, because we dont have all contact force readings from
the tactile sensor, matrix M becomes low rank and pseudo
inversion should be applied in the place of the matrix inverse.
D. Controller
The control loop architecture is presented in Fig. 4. Starting
with the plant, we consider the system comprised of the
hand desired joint positions, which will affect the interaction
forces between the fingertips and the object, and between
the object and the environment. The state of the system will
be given by the hands joint angles q, the contact forces f
and the objects pose. We use the fingertips tactile sensor
to measure the intrinsic contact forces. Due to the sensors
measurement error we use the proposed force estimator in
III-B to get an improved force observation that we use to close
the control loop. Considering the initial multi-finger grasp,
we can compute the initial contacts locations and normals,
and combine them with the objects properties to compute the
desired force trajectory that will feed the controller desired
force fdes as described in III-C.
We use the error e between the desired forces and the
observations at each contact point along with the fingertips
Jacobian J to compute direction of motion of the fingertips as
q  K1JT (q)e
Where K is a positive-definite gain matrix. We can use this
q to update the desired joint angles of the hand in the plant,
which is realized through the hands low-level PD controller.
IV. EXPERIMENTS AND RESULTS
We run both simulation and hardware experiments to
evaluate the performance of our proposed method. For the
algorithm implementation, we approximate the friction cones
through a 12 sided pyramidal geometric approximation. Also,
the constraint matrix Afe is computed through single value
decomposition to construct the basis. For the experiments,
we use the Allegro Hand V4 which has 4 fingers, each with
4 Degrees of Freedom (DoF), and we replaced the original
fingertips of the hand with custom tactile sensor fingertips
by Touchlab Limited Inc . We use MuJoCo to simulate
the arm, hand, and objects kinematics, dynamics, and contact
interactions. For the hardware experiments, we use a Franka
FR3 arm to position and move the Allegro hand. An Optitrack
camera system is used to measure the 6D pose of the robotic
and 0.05. The interaction between the fingertips and the
objects is measured using the tactile fingertips which output
normal forces at the contact location. The hardware setup and
experiment objects are shown in Fig. 5.
In each experiment, we start by closing the multi-finger
hand to grasp the object and acquire the initial tactile readings
and use these initial measurement of forces to determine the
contact location and normal. Then, using the objects mass,
Center of Mass (CoM), and friction, and assuming a quasi-
static motion, we compute the desired force, fdes, for each
contact using the Newton-Euler equations of 3D rigid-body
dynamics to realize the object motion (hold the object still
in case of grasping) as shown in eq. 1 and considering the
minimum force constraints as in eq. 3. While we can measure
the objects mass, for CoM and friction coefficient we use
an offline parameter estimation. If no good estimation of the
friction coefficient or CoM is available, a more conservative
estimation value that shrinks the friction-cone can be used so
the final computed grasp will be inside the real friction-cone.
used during force planning, and only the mass is required
during the force estimation algorithm. To compare the per-
formance improvement due to the force estimator, we switch
the feedback signal between the fingertips raw measurements,
fraw and the estimated force values computed by our proposed
force estimator, fest. We control the desired contact force in
an admittance controller framework as described in III-D.
A. Force Measurement via Tactile Array
Each tactile fingertip part has an array of 42 small 1D
piezo-electric sensors (taxels) that are placed on the tip, body,
and sides of the fingertip. The position of each taxel and its
orientation (normal vector) relative to the fingertip base are
known. We define the raw measurement as the values provided
by each taxel which represent the calibrated normal force
reading of each taxel. Assuming point contact, the distributed
forces on each fingertip can be represented by a single raw
i.e. weighted average of taxels positions times their measured
force. Similarly, the contact normal of each fingertip is the
Fig. 5: Hardware setup including Allegro hand equipped with
Touchlab fingertips, and Franka arm. The 3D-printed sphere and
used for extrinsic manipulation experiments.
normalized weighted average of the normal vectors times their
measured force. Each taxel has been calibrated to measure a
force between 0.1 20N under full contact conditions.
Touchlabs tactile fingertips are responsive even to small
forces and their dense coverage of the fingertip surface, includ-
ing sides and the top, allows a reliable tactile-based dexterous
manipulation. However, despite their higher performance com-
pared to many of the state-of-the-art commercialized tactile
sensors we have tried, they are still in an early stage in
terms of providing accurate force measurement. While each
taxel is calibrated, due to approximations in calibration as
well as the discrepancy between calibration conditions and
real-world contact-rich manipulation scenarios, such as partial
contact in real-world vs full-contact during calibration or
contact forces not aligned with the taxels normal (applying
force at an angle), measurements have considerable errors.
These discrepancies lead to measurement errors in the range
of 0.1 1N per taxel, which can accumulate when computing
the fingertips raw force measurement. The characteristics of
individual taxels can be summarized by the following:
Activation threshold: Minimum required force that the
taxel will measure (0.1 0.5N). Effect: As additional
taxels come into contact, there is a discrete jump in
the measurements when a force increases over a taxels
activation threshold.
0.2N). Effect: As contact shifts, taxels that lose contact
and should not sense any force, might output a small
Force error: Due to partial contact or when the interaction
force is not aligned with the taxel (0.1 0.5N). Effect:
When adding the taxels forces, we have an offset be-
tween the ground truth force and the measured value.
Taxels noise: inherent noise of the piezo-electric taxel
at steady state (0.01 0.03N). Effect: No major effects
Fig. 6: Contact force comparison between ground truth (FT sensor),
hardware tactile measurement and simulated tactile measurement
once contact has been established.
We use these characteristics in simulating our tactile re-
sponses in MuJoCo to have an accurate representation of the
error and noise of our tactile fingertips when testing our algo-
rithm in simulation. A comparison between the ground truth
of the applied force (provided by ATI Nano17 ForceTorque
sensor), taxels real-world measurement on hardware, and the
simulated values in MuJoCo are shown in Fig. 6. As seen in
this figure, the simulated tactile data is able to closely represent
the characterization of the real tactile data. The main discrep-
ancy between the simulated and hardware measurements is that
we consider one uniform characterization for all the fingertip
taxels in simulation independent of contact size or contact
change based on the contact location and contact area, and
the error is different between different fingertips. Nevertheless,
the simulated behaviors resemblance to real-world readings
allows us to test our algorithm in simulation.
B. Simulation Results
Fig. 7 represents examples from grasping (wrench) and
extrinsic manipulation (cube) in the simulated environment
in MuJoCo. Associated hardware experiments will be pre-
sented in IV-C. For the simulation, we either measured or
approximated the respective objects properties to their real-
world counterpart. The simulation uses the same values as
the hardware for the hand joints PD gains. For the wrench
grasping simulation, we consider a 0.3kg object, with a friction
of 0.9 and a tactile sensing noise variance of 0.5N. We
compared the controller when using the estimated force values
against the raw measurements, with the results shown in Fig. 8.
When using the estimated force values, the forces converge
to their respective desired values. For the experiment using
the raw measurements, we can see that forces are not able to
converge as the thumb is under the desired force but the index
and middle fingers are over the desired force. This exemplifies
the problem of the error in measurements, where we need the
thumb to apply more force to reach to its desired value but
at the same time the index and middle finger should decrease
their force. Since the thumb opposes the forces applied by the
index and middle finger, thus they have to increase or decrease
For extrinsic manipulation simulation, we use an 8cm cube,
with a mass of 0.15kg, and friction coefficients of 0.8 at the
fingertip contacts and 0.6 at the table contact. Similar to the
Fig. 7: Simulation environment in MuJoCo for the wrench grasp
and cube extrinsic manipulation. Simulated interaction forces at the
contact points are displayed.
Fig. 8: Grasping wrench comparison using the force estimation (left)
and the raw measurements (right).
wrench simulation, we consider the same hand joints PD
gains and tactile sensing noise of 0.5N. Here we can show
that our force planner can generate a sequence of fingertip
contact location and forces and then have our controller follow
the trajectory successfully as seen in Fig. 9. It takes a couple
of seconds to accomplish the force control using the force
of the sequence. Once the controller converges to the desired
with an RMS error under 1.
As part of determining the benefits of our geometric frame-
work for force planning and estimation, we compared the com-
putation time of our method, in simulation, to directly running
optimization using Second Order Cone Programming (SOCP)
at different lengths on an example grasp force planning of a 3-
finger grasp experiment of an object. The results are presented
in Tab. II. According to the results, we can see an improvement
in computational speed with about a 14 speed-up using our
framework over the SOCP.
Fig. 9: Cube turning in simulation
100 steps
300 steps
Geometric
TABLE II: Execution time comparison between SOCP and Geomet-
ric optimization.
Fig. 10: Successfully grasping different objects using the proposed
C. Hardware Results
Dexterous Grasping: We will first introduce the underlying
problem of inaccurate force measurements in hardware by
presenting a 2-finger pinch grasp of a sphere. Then we will
study the performance of our algorithm using two experiments,
1) a 3-finger grasp of a wrench, and 2) a 4-finger grasp of
a large cylinder. With a three and four-finger grasp, we can
ensure that force equilibrium can be accomplished and we
can compare the controllers performance. The used grasps
are shown in Fig. 10.
1) 2-finger grasp: To represent the underlying idea of this
work in a simplified scenario, we consider a two-finger grasp
of a sphere with a mass of 0.082kg. To accomplish force
balance for this example, we need the contact forces to have
equal magnitude and opposite direction. Given the objects
contact points, we use our force planner to compute the desired
force that each fingertip should apply to hold the object (as in
eq. 1) without over-pressuring it (following constraint in eq. 3)
a feedback signal, the controller can control the forces to their
respective desired values. As shown in Fig. 11, the estimated
contact forces converge to the desired value with a mean
error of 0.1N. In this case, we have achieved force balance
as the estimated forces have converged to their respective
values and there is no apparent motion on the object. Now,
we can take a closer look at the raw measurements, which
Fig. 11: 2-Finger grasp of sphere.
throughout the experiment show a close correlation but do
not have equal magnitude. If we were to control the system
using the raw measurements as the feedback signal, it becomes
apparent that we would have to break the force balance that
was accomplished. Analyzing the end of the experiment, we
have raw measurements for the thumb fthumb 1 and index
finger findex 0.6, which would lead to a control output
where we want to decrease the applied force by the thumb but
increase the applied force by the index. Since we only have
two fingers, either both have to increase the applied force or
both have to decrease it to keep the force balance. Thus, using
the controller based on the raw measurements would break the
force balance eventually and the object would start to move.
2) 3-finger grasp: We use a 3D printed wrench of 300gr
for this experiment. Similar to the 2-finger grasp, given the
object properties and contact locations, the force planner
computes the desired forces required for each fingertip to hold
the object in force equilibrium. Fig. 12 is a representative
result of this experiment. We start by controlling the system
based on the estimated forces. Within the first 5 seconds, the
system converges to the desired values, with a mean error
between the fingertips desired force and the estimated values
of 0.090.04N. We hold the grasp for 20s to show that force
equilibrium is achieved and the object pose remains static.
change in the desired object orientation and it is placed back
successfully at 35s. At 40s, we switch the controller to use
the raw measurements as observation. We can see that while
the system tries to control the contact forces of all fingers to
reach to the desired values, it is not successful. It can be seen
that equilibrium cannot be achieved since while the thumb
and middle finger have achieved forces close to desired values
within an error of 0.20.1N, any attempt to reduce the error
of the index finger by increasing its generated force would
yield a reactive force on the thumb that will push thumb away
from its desired value. Thus an error between 0.5 0.9N
is observed for the index finger. This force imbalance while
trying to control the raw measurements, introduces unintended
object movements such as tilting and thus losing grasp while
attempting to lift the object.
We performed the grasp and lift experiment of the wrench
20 times, 10 using the estimated force, and 10 using the raw
measurements. We will con sider a grasp to be successful
if the object does not undergo a noticeable movement (more
than 1). The success rate along with the mean and standard
deviation of the force error at the contact points for the success
and failure cases is presented in table III. We can see that using
the estimated forces increases the success rate considerably
compared to the raw measurements experiments. For the two
experiments that failed using estimated forces, tactile sensors
were not reacting to contact despite an increase in the exerted
forces thus leading to overexertion of forces. In the two success
cases using the raw measurements, we can see that the mean
force error was very small. This can be the case when by
chance the individual fingertips read similar measurements
and close to the estimated values, which allow the fingers to
Fig. 12: 3-Finger grasp of wrench. From t  0s to t  27s we
control the estimated forces to the desired values for each finger.
The controller converges and keeps the forces around the desired
value. From t  27s we lift the object to show a successful grasp, at
t  33s we put the object back down and keep stable control. From
t  40s we try to control the raw force values. The system is not
able to control all of the fingers to the desired force and the object
is eventually dropped.
Success rate
Mean  std force error
cylinder
TABLE III: Success rate for wrench and cylinder grasp experiments
with the mean and std of the force error of the grasps when it was
successful and when it failed.
accomplish a successful grasp.
3) 4-finger grasp: For this experiment, we use a cylinder
with a mass of 0.360kg and a diameter of 0.11m. The contact
locations on the object are chosen in such a way that the
controller has to account for the force balance in all directions.
forces to their desired values as shown in Fig 13.
We conducted the experiment 20 times, 10 using the force
results shown in table III.
Fig. 13: 4-Finger grasp of cylinder.
Fig. 14: Cube turning hardware experiment.
Fig. 15: Screwdriver turning hardware experiment.
When using the raw measurement, the system was not able
to converge to the desired grasp and resulted in a force error
of around 1N, resulting in the tilting of the cylinder or loss
of the grasp when lifting. Similar to the wrench example, we
observe a higher success rate when using the estimated force
values. For the failed experiments using the force estimation,
in three cases the fingertip sensor had a slightly larger force
their desired values and when lifting, the object experienced
a small tilt of 3, but was held successfully. For the
remaining failure case, the hysteresis of multiple taxels of the
index finger created the illusion of a large force being sensed
making the the index finger move away until it detaches.
Once the hysteresis went down, the index finger was placed
back onto the cylinder, but at that moment the cylinder had
already moved considerab
