=== PDF文件: A Generic Continuous Multi-Joint Spinal Robotic System for Agile and Accurate Behaviors with GNN-MPC.pdf ===
=== 时间: 2025-07-22 15:48:31.601531 ===

请你只输出如下JSON，所有字段都必须有，且每个“关键词”字段只允许输出一个最核心的最有代表性的中文关键词，要中文关键词（不能是英文，不能是多个，不能有逗号、分号、空格），否则视为不合格。不要输出任何解释或正文，只输出JSON。
{
  "论文标题": "",
  "研究主题关键词": "",
  "应用场景关键词": "",
  "主要方法关键词": "",
  "创新点关键词": "",
  "主要结论关键词": ""
}
内容：A Generic Continuous Multi-Joint Spinal Robotic
System for Agile and Accurate Behaviors with
GNN-MPC method
Ying Wu1, Zida Zhou1, Renming Liu1, Lanxiang Zheng1 and Hui Cheng1
Equal contribution. Video:
Corresponding Author: chengh9mail.sysu.edu.cn
1School of Computer Science and Engineering, Sun Yat-sen University, Guangzhou 510006, China
AbstractThe biomimetic research of vertebrates is challeng-
ing in both mechanism design and control methods. Motivated
by natural acrobatics exhibited by cats and humans, this paper
presents a generic multi-joint continuous spinal system and a
learning-based algorithm for agile and accurate control. The
spinal system combines flexibility with a high load-bearing
It features a chain-like structure formed by multiple pairs
of spherical gear joints, which endow it with the ability to
bend in all directions. Then, to realize dynamic and precious
offline learning is proposed. In this framework, Graph Neural
Networks are employed to learn the dynamic model parameters
of the spine offline, while the parameterized Model Predictive
Control (GNN-MPC) can update the dynamic constraints online
and select the optimal control strategy. In the aerial flipping
task of the spinal column, a dynamic constraint analysis of
the angular momentum of the spinal structure is conducted to
derive the most efficient flipping strategy. It allows the spinal
structure to execute flips in the air without relying on external
forces or mechanical structures. Quantitative analyses of high-
load applications on the spine reveal that the spinal column
can maintain strength, precision and flexibility simultaneously.
A series of aerial flipping experiments prove the designed spines
the spine system can realistically mimic biological spine behavior,
validating the algorithms effectiveness and robustness.
I. INTRODUCTION
The vertebral column of biological organisms is essential
for complex movements like flexion, extension, lateral bend-
quickly respond to environmental changes and change direc-
Flexible spinal structures allow quadrupedal and humanoid
robots to change postures without external force. They have
wide-ranging applications in search and rescue , film
special effects , military reconnaissance , and agri-
culture . In space exploration, robots capable of
flipping offer greater flexibility and efficiency. They can flip
and adjust postures in microgravity for maintenance, repair,
and construction inside and outside space stations.
Despite the pivotal role that the spine plays in biological
often overlook the spine or reduce the complexity of
the spinal mechanism, thereby sacrificing the inherent flexibil-
Fig. 1: The 2-DoF Spherical Gear-Based Synchronous Multi-
joint Mechanical Spine. (a) Basic mechanism. (b) Install two
driving modules to increase the strength. (c) Assemble two
mechanisms together for more DoF.
ity of biological systems. This limitation primarily stems from
the mechanical challenge of balancing high degrees of freedom
(DoF) flexibility with structural strength, coupled with the lack
of control algorithms capable of coordinating multi-DoF dy-
namic responses while adapting to diverse task requirements,
ultimately restricting spines application in quadrupedal and
humanoid robots.
feature relatively low load-bearing capacity and precision
. It is difficult to extend their application to spinal
robots like quadruped robots. Rigid structures, despite having
high load-bearing capacity and precision, require the addition
of transmission mechanisms and driving motors to increase
their DoF . This adds extra weight to the system.
both flexibility and strength.
Most studies use predefined models and optimal control
algorithms for spinal robots. They show the spine can boost
quadruped robot walking, like improving energy efficiency
and increasing stride length .  validates the benefits
of the spines lateral flexion, such as stride extension, better
mainly focus on slow-speed tasks and dont explore the
spines dynamic performance for robot flexibility and agility.
For example, the spine could help robots do aerial flips or
run faster. Thus, it remains challenging to develop control
algorithms that fully exploit the dynamic capabilities of spinal
joints while ensuring their adaptability across multiple tasks.
Fig. 2: Mechanical design of the SGb-SMMS. (a) Structure of the SGb-SMMS. (b) Elements and assembly methods of the
spine mechanism. (c) Mechanism design of the drive module.
To address the challenge of integrating spinal functionality
into quadrupedal and humanoid robots, this paper proposes
a novel bionic robotic spine architecture with an associated
whole-body dynamic control framework. As illustrated in
Fig. 1 and Fig. 2, we develop a 2-DoF Spherical Gear-Based
Synchronous Multijoint Mechanical Spine (SGb-SMMS) com-
prising two subsystems: A mechanical structure using serially
connected 2-DoF spherical gear joints enabling omnidirec-
tional bending, and a drive module centered on a bevel
gear differential mechanism that dynamically allocates torque
between bilateral motors to achieve continuous full-range
actuation. The proposed Graph Neural Network-enhanced
Model Predictive Control (GNN-MPC) integrates task-specific
dynamic constraints with GNN-learned dynamic parameter
mappings. We validate the systems efficacy through basic and
advanced locomotion tests under diverse conditions. The main
contributions of this paper are summarized below:
1) The SGb-SMMS is the first multi-joint spinal archi-
tecture integrating spherical gears. By leveraging the
multi-directional meshing characteristics of spherical
gear pairs, it achieves continuous 3D omnidirectional
bending using only two motors. This design synergizes
structural strength with flexibility while maintaining
control simplicity, and its modular architecture enables
seamless scalability.
2) The GNN-MPC employs offline learning with minimal
training data to optimize dynamic constraint parameters,
combined with online adaptation that updates system
parameters based on real-time joint states. This hybrid
offline-online strategy enables task adaptability across
diverse operational scenarios while fully exploiting the
spines dynamic capabilities for agile maneuvers.
3) We conducted extensive experiments to validate the
systems effectiveness, including basic experiments and
advanced experiments. The basic experiments verified
the structural precision, load-bearing capacity, flexibility
and expandability. The advanced experiments analyze
the dynamic constraints of feline aerial flipping and
achieved multi-posture aerial flipping experiments using
the SGb-SMMS, demonstrating the structures flexibil-
robustness.
II. RELATIVES WORKS
A. Mechanical design
Biomorphic robots equipped with spine have emerged as
a focal point of research within the robotics domain. Such
structures enhance robotic agility and stability, enabling the
execution of complex maneuvers. The bionic spine in robots
is categorized into two distinct types: flexible and rigid.
The flexible spine, composed of multiple segments or joints,
allows for relative motion between segments, facilitating bend-
ing and twisting. These segments are typically actuated by
pneumatic and cable systems to mimic the flexibility of
biological spines. Cable-driven flexible spines aim to closely
replicate the flexibility of vertebral joints, but they are prone
to deformation and have limited load-bearing capacity
.  presents a quadruped soft robot for climbing
parallel rods. Its pneumatic-driven spine, via an extendable
special environments. Pneumatic systems provide high load-
bearing but sacrifice control precision and are greatly affected
by environment. The design of flexible spines permits more
natural bending and twisting movements in robots, but the
challenge lies in maintaining sufficient strength and stability
while achieving precise motion control.
Contrasting with the flexible spine is the rigid spine, which
is more structurally fixed and robust, to offer significant
support and load-bearing capabilities. Rigid spines utilize
non-articulating structures and high-strength materials, thereby
enhancing their rigidity and durability . Despite their
limited DoF, these spines excel in stability and force trans-
mission. Serial multi-jointed mechanisms  and parallel
mechanisms  have been explored to increase the DoF of
robotic spines. In particular, the multi-joint spine connected in
series has also been studied to mimic the falling cat motion
. However, these approaches introduce greater structural
complexity and additional weight from extra actuators, poten-
tially compromising the overall flexibility and agility of the
robotic system.  presents an active ball joint mechanism that
combines high rigidity and flexibility through spherical gear
transmission without sensors. To date, this structure has not
been implemented in spinal applications.
B. Control algorithm
In multi-joint robotic research, conventional model-based
control methods typically employ predefined models such
as the spring-loaded inverted pendulum (SLIP) [12, 14] or
preconfigured system states . These approaches enhance
computational tractability while preserving adaptability. How-
dynamics during motion may lead to system instability. For
multi-joint systems, accurate whole-body dynamics are gen-
erally difficult to obtain, and real-time updates of dynamic
parameters are further constrained by computational resources.
proaches that either learn precise system dynamics  or
integrate model-free methods to directly map robot behaviors
to control policies .
Current learning-based control methods for multi-joint
robots are divided into main approaches: one uses extensive
simulation training in virtual environments , and
the other captures real organism movements for imitation and
learning . While these methods improve robot
stability and flexibility, they require extensive training data
and time and are often limited to fixed robot configurations. To
overcome these limitations,  uses machine learning
to learn unknown parameters of dynamics model from few
data. With a small amount of flight data, a deep neural net-
work (DNN) can be trained to represent aerodynamic effects
under different wind conditions for quadrotors . These
methods collect prior information of the system, do not need
large datasets and can be adapted to various robotic systems,
potentially simplifying dynamic models.
Despite the potentials of active spines to enhance locomo-
tion performance in legged robots, the complexity of spinal
models leads to many quadrupedal robots to avoid spinal
joints to minimize control difficulties. Common controllers for
legged robots with active spines are typically limited to motion
in the sagittal plane . Recently, compliant spines with
lateral flexion capabilities have gained more attention, improv-
ing legged robots turning and walking speed .
and  design a bioinspired mouse robot, NeRmo, which
utilizes a compliant and flexible spine to improve locomotion
optimization based on simplified models, with spine trajectory
pre-defined for specific locomotion tasks. To auto-optimize
Fig. 3: Involute ring-tooth spherical gear pair.
the spinal trajectory,  employs Q-learning in a biomimetic
quadruped robot, enhancing spinal dynamic locomotion. To
the best of the authors knowledge, no existing approaches
of legged robots have utilized the dynamics of the spine to
achieve axial twisting in the sagittal plane.
III. MECHANISM AND KINEMATIC ANALYSIS
The natural animal spine is a continuous, multi-vertebrae
structure that bends flexibly through coordinated interactions.
Inspired by the natural animal spine, we designed the SGb-
SMMS with serially connected spinal joints that diven by
a drive module at one end of the mechanical spine allows
for simultaneous joint movement. This section presents the
mechanical design and kinematic analysis of the SGb-SMMS,
showing how it mimics biological spine movement via me-
chanical linkages.
A. Mechanism design
The structure of the SGb-SMMS is shown in Fig. 2, which
is mainly composed of two parts: the spine mechanism and
the drive module.
The spine mechanism is designed based on spherical gear
pairs. Spherical gear is a special type of gears whose teeth are
distributed on the surface of a sphere and are used to achieve
the transmission of multi-DoF motions in space .
Due to the meshing of the tooth surface structure, it has high
torque transmission and reliable positioning. Thus, spherical
gear have great potential and advantages in the application
of multi-DoF robot joints . The spherical gear
pair applied in the spine mechanism is the involute ring-tooth
spherical gear pair . There are abundant studies on the
processes  of this type of spherical gear, which proves that
it has certain advantages over other types of spherical gears.
For example, it has relatively good load-bearing capacity and
transmission accuracy, is free from errors in the transmission
meets the requirements of the 2-DoF transmission.
As shown in Fig. 3, the involute ring-tooth spherical gear
pair is formed by rotating the tooth profiles of a pair of
conjugate involute spur gears around their polar axes. Since
the meshing of gears requires the teeth and tooth slots of two
gears to correspond to each other, one spherical gears polar
axis is the symmetry axis of a tooth, and the others polar
axis is the symmetry axis of a tooth slot. According to the
central structures, they can be divided into convex spherical
gear (CvSG) and concave spherical gear (CcSG).
As shown in Fig. 2, the spherical gears are the main
structure of the spinal joint components. Cut one end of the
spherical gear in a circular shape along the polar axis and
distribute several support brackets evenly around it. Then,
arrange hinged supports near the center of the sphere, and
a joint component is formed. According to the structure of
the spherical gear, the joint components can be classified into
CvSG-joint component and CcSG-joint component. A spinal
joint is assembled by connecting a CcSG-joint component
and a CvSG-joint component on a cross shaft. The two
joint components can rotate in 2-DoF along the center of
the joint relative to each other. Meanwhile, these two types
of joint components can form spherical gear pairs. When
forming a spherical gear pair, the two spherical gears are
installed opposite to each other along the polar axes, and their
pitch sphere are tangent, and the distance asph between their
spherical centers is the sum of the pitch circle radius of the
two spheres. The spherical gear pair demands the two gears
have the same modulus, and the tooth ratio of the spherical
gear pairs in the spine mechanism is 1 : 1. Thus the two gears
have the same pitch circle diameter dsph:
asph  dsph.
The two meshing sphercial gears can mesh along any
longitude direction, doing 2-DoF pure rolling. At the contact
opposite. As a result, the two joint components can be bent in
any direction relative to each other.
When assembling the spine mechanism, the polar axes of
all spinal joints are in a coaxial state, and the spinal joints are
aligned in the same direction. Using rods to connect the two
adjacent spinal joints by assembling the components that do
not participate in the meshing between these two joints. Since
the joints orientation are the same, there is a CvSG and a
CcSG between every two joints. Set the distance ln between
the joints to be equal to the center distance of the spherical
gear pair:
ln  asph.
So that the CvSG and the CcSG between the joints mesh
with each other to form a spherical gear pair. In this way, the
spine mechanism is assembled.
Fig. 2(c) shows the mechanism design of the drive module.
It mainly uses a bevel gear differential mechanism which has
advantages in the application of multi-DoF robotic joints as it
can achieve multi-DoF motion and flexibly distribute power
. In the driving module, two motors (M1,M2) on
both sides make the output component rotates through the
differential mechanism. In the differential mechanism, two
identical bevel gears BG1 and BG2 are distributed on both
sides and respectively mounted on M1 and M2. At the center
of the mechanism is a cross shaft, one of its axes is hinged to
the base and is coaxial with BG1 and BG2, while the other
axis is hinged to the actuator. The actuator is composed of a
spherical gear component (Ga) and a bevel gear (BG3) fixed
together. In the straightened state of the spine, the axis of
Fig. 4: Sectional view of the spinal mechanism. (a) Extended
state. (b) Bending motion. (c) Geometric analysis.
the spherical gear is along the z-axis, and the axis of BG3 is
along the x-axis. BG1 and BG2 are respectively meshed on
both sides of SG3, and through rotational coupling, drive the
output component to rotate omnidirectionally.
To install the spine mechanism on the drive module, engage
the output component with the spherical gear at the end of
the spine mechanism and fix another joint component of the
end spine joint to the base of the drive module as shown in
Fig. 2(a). Then a basic SGb-SMMS is assembled. Additionally,
depending on actual needs, we can install drive modules at
both ends of the spine mechanism to obtain greater driving
force as Fig. 1(b), or assemble multiple SGb-SMMS together
to achieve more DoFs as Fig. 1(c).
B. Kinematic analysis
This subsection introduces the mechanical principle of the
spine mechanism, and demonstrate how multiple joints can
synchronously carry out a bending movement with 2-DoF
through mechanical transmission, so that it can achieve the
movement state of the biological spinal structure.
To explain the movement principle of the spine more
movement of the spine in the x-axis direction as an example,
the plan view of the mechanism movement is shown in Fig. 4.
Ga represents the spherical gear of the output component, and
joints. In the subscript symbol of G1A, 1 indicates the first
to the Ga, and B represents another spherical gear on the
same joint. According to the mechanism design, the link
between two joints Ln is composed of the spherical gears
facing outwards of two adjacent joints. For example, L1 is
composed of G1A and G1B. Since they form a whole, their
rotation speeds are the same during movement.
As it is a planar motion, the spherical gears can be analyzed
as involute spur gears. In Fig. 4, when Ga rotates counter-
clockwise at a, since the gear ratio of all gears is 1 : 1, G1A
rotates in the opposite direction at the same speed, driving L1
to rotate with angular velocity l1:
Denote the rotation speed of the spherial gears on the spinal
joint G1B and G2A as 1B and 2A. G1B is fixed on the base
and stationary, so that 1B  0. G2A is hinged on O2, and O2
Fig. 5: 2-DoF movement of the spine mechanism.
rotates with L1. Therefore, G1B, L1 and G2A form a planetary
gear mechanism. According to the analysis of the motion of
the epicyclic gear train, the reduction ratio iL1
BA of B to A
of L1 frame can be obtained:
BA  1B l1
Since the teeth number of the gears are the same, the
transmission ratios iLn
BA of all gear pairs are -1. Based on the
given conditions, we can calculate the rotation speed of L2:
L2  2A  2a and the direction of rotation is the same
as that of L1. Thus, the rotational speed of L2 relative to L1
is a. By analyzing the subsequent joints in the same way,
the rotational speed Ln of each link and the relative speed
between two adjacent links can be obtained:
Ln L(n1)  a.
The geometric relationship of the spine mechanism during
movement can be obtained as shown in Fig. 4(c). When Ga
rotates by s, all joints will synchronously rotate by s relative
to the previous joint, and the rotation angles n of each joint
n (n1)  s.
The universal joint enables two-DoF rotation of the spher-
ical joint, allowing the spherical gear pair to mesh in all
longitude directions. This makes the planar mechanisms
motion possible on planes through the z-axis, enabling the
spine to bend in any x y plane direction (Fig. 5). The
spines bending posture is determined by s (joint rotation
determining bending direction). Due to reduced contact area
and meshing reliability when involute ring-tooth spherical
gears mesh, s is limited to 30, and  (0, 360).
All the joints and links of the spine mechanism are located
in the z n plane and follows the motion principle of the
planar mechanism described in Fig. 4. Therefore, each joint
rotates by s in the same direction, and the rotation axis of
the joint is the vector k perpendicular to the z n plane.
In Fig. 6, the direction of each link of the spine is the zn
direction of respective joint coordinate system. According to
Fig. 6: Drive device motion analysis. (a) The motion of the
spherical gear pair between the spine mechanism and the
drive module. (b) Kinetic analysis of bevel gear differential
mechanism.
Eq. (5), the relationship of the rotation angles of each link can
be known, and the calculation formula for zn can be obtained:
zn  Rot(k, ns)z0,
where the rotation matrix Rot(k, ns) represents a rotation
of angle ns around the vector k, and can be solved by the
Rodriguez formula.
Due to the existence of gimbal lock in the universal joint
used in the spinal joint, the rotational change of the joint
coordinates needs to be determined by the installation direction
of the cross shaft. When installed as shown in the Fig. 2, the
hinge axis of the joint component fixed to the drive module
is parallel to the y-axis, then the x direction movement of l1
is carried out along the coordinates of the universal joint pin.
The angles of rotation of the spinal joints along the x-axis and
y-axis are denoted as sx and sy respectively. At the same
the same, it can be obtained that the rotation matrices Rs of
each joint are the same, and can obtain the rotation matrix as
Rs  Rot(y, sy)Rot(x, sx)
Substituting Eq. (9) and Eq. (10) into L1 can solve sx
and sy, thereby the rotation matrices of all joints can be
obtained. It is known that the lengths ls of all links are the
same. Therefore, the transformation matrix n1T n between
every adjacent joints can be obtained:
Based on the transformation matrix n1T n, the posture
relationships between spine links can be obtained. Matrix
multiplication determines the posture of any joint and points
on it relative to the driving device.
When the drive module drives the spine mechanism, the
spherical gear pair formed between the driving device and
the spine mechanism is shown in Fig. 6(a). The transmission
between the two spherical gears is relative to pure rolling.
On the cross section of the spherical gear movement direction
(zn plane), Ga rotates in one direction, then G1 rotates in the
opposite direction at the same angle. In Fig. 6, the spherical
Fig. 7: The control frame of the GNN-MPC.
gear G1 rotates s along k, while Ga rotates along ka, which
is opposite to k. It can be obtained that the polar axis vector
of Ga as follows:
za  Rot(ka, ns)z0.
The movement of Ga is controlled by the bevel gear
differential mechanism. As shown in Fig. 6, when the BG1,
BG2 rotate by the same angle ay1, ay2 in the same direction,
they drive the universal joint pin and BG3 to rotate by ay
along y0.
ay  ay1  ay2.
When the BG1 and the BG2 rotate in the opposite direction
by the same angles ax1 and ax2 respectively, it causes the
BG3 to rotate by ax along the axis of the universal joint pin.
In addition, since the number of teeth of the BG1, BG2 is
different from that of the BG3, there is a reduction ratio ib in
the transmission.
The two kinds of motion can occur simultaneously, enabling
Ga to perform omnidirectional rotational motion. The trans-
formation matrix 0Ta of the Ga is:
0T a  Rot(y, ay)Rot(x, ax).
For the rotation angles b1 and b2 of the two bevel
gears BG1 and BG2, when the driver rotates, each of them
is composed of the two basic rotations when Ga rotates
omnidirectionally.
b1  ax1  ay1
b2  ax2  ay2.
The rotation angles of BG1 and BG2 are the output angles
of motors M1 and M2. The corresponding relationships of the
movement of the driven components driven by the motors can
be obtained.
Eq. (10)-(18), the required motor output angles b1, b2 can
be obtained. So that the drive module can perform accurate,
reliable and real-time control of the spine mechanism as shown
in Fig. 2.
IV. LEARNING BASED MPC CONTROLLER
While an active spine boosts the agility, stability, and
flexibility of multi-joint robots, the extra DoF of spine adds
significantly complicate the dynamics model. In addition, the
external forces acting on the robot vary in different situations,
and the role of the spine also changes, which results in
different dynamic models of the robot. For example, in the
it can achieve faster running speeds through spine extension
and contraction. As depicted in Fig. 7, to fully utilize the
SGb-SMMSs capabilities within limited computational power,
this section details a GNN-MPC method that combines offline
learning and online update for the spinal system consisting of
j SGb-SMMS in series.
A. Adaptive MPC
As shown in Fig. 5, we use the bending angle s of the
spine and the rotation angle  to describe the rotational
state of the SGb-SMMS. The spinal robot system state is
given by qb  {Rb, P b}T , si and i represent the state of
the i-th SGb-SMMS, and the control outputs are chosen as
U ref  { i, si}T with (j i 1), where the rotation matrix
R represents the posture of the robots center of mass (CoM)
and P is the position of the robots CoM. The optimization
problem takes the desired state qb,ref as input and produces
the SGb-SMMA trajectories U ref as output. Therefore, we
construct the following optimization problem:
log(RbRT
gk(qb, Uref) 0
gd(qb, Uref) 0
hk(qb, Uref)  0
hd(qb, Uref)  0,
where the gk and hk represent the kinematic constraints of
the spine robot, gd and hd represent the dynamic constraints
of the spine robot. The spine functions differently in various
distinct. To enhance computational efficiency, our control
system analyzes the dynamic model of the spine in accordance
with different scenarios and selects the most efficient dynamic
constraints. In order to analyze the dynamic model of the
spine in various situations, accurate dynamic parameters are
essential. In , a Body Transformer architecture based on
GNN is proposed for learning robot policies. Its advantage
lies in the ability to capture the structural information and
relationships of multi-joint robots. Therefore, we adopt a
model parameter identification method based on GNN.
In contrast to the dynamic constraints, the kinematic con-
straints of the same spinal joints remain unaltered. As shown
in Fig. 5, the spine can be modeled as a series of connected,
compatible revolute joints (n-DoF). Due to the constraints of
the spinal joints, the rotation angles of each revolute joint are
consistent. Denote the transformation matrix of the i-th SGb-
SMMS as 0T i
a(i, si). Therefore, we transform the kinematic
(a) different bending angles
(b) different
Fig. 8: (a): Different values of s result in different bending
angles of the spine, but the center of mass of the spine remains
unchanged. (b): With the same value of s, changing only
causes the spine to rotate around a fixed axis at the same
bending angle, generating rotational angular momentum.
constraints of the spinal system consisting of j SGb-SMMS
in series. The constraints on the relative positions are refined
in terms of the relationship between the positions of the spinal
end P n and the state of the spine {i, si}, 0 < i j.
P n  0T 1
a(j, sj)P 0
P lower P n P upper,
where P 0  [0
1]T . And Eq. (20) represents the
limitations of the workspace at the spinal end, and as j
decrease. By specifying dynamic constraints for different tasks
and solving the optimization problem, we can obtain the
desired output Uref of the spinal system. Through inverse
kinematics calculation, the state corresponding to Uref can be
transformed into the desired angle i and angular velocity i
of each joint motor. The joint trajectory is controlled by a
Proportional-Derivative control (PD control):
i  Kp(i,d i)  Kd( i,d i),
where i is the control torque of the i-th joint, Kp is the pro-
portional gain coefficient, Kd is the derivative gain coefficient,
angular velocity of the i-th joint.
B. Learning-based Dynamic Constraints
The dynamic role of the spine in increasing the turning
radius and walking speed has been widely studied. Therefore,
this paper mainly focuses on the dynamic constraints of the
spinal robots flipping only through the spine. Since the falling
cats mid-air flip relies on the Law of Conservation of Angular
Momentum (LOCAM), LOCAM serves as the fundamental
principle of the spinal robots flipping. The LOCAM states that
the total angular momentum of a spinal robot remains constant
if no external torques act on the system when it falls from the
air. Assume that the initial momentum and angular momentum
of the robot in the air are both 0. In fact, different s and  can
change the bending angle of the spine and also make the spine
rotate around a fixed axis. Since the robot is only affected by
the vertical downward gravity in the air, the position of the
robots center of mass only moves downward along the z-axis
of the world coordinate system. As shown in Fig. 8, assuming
that the s of the spine at a certain point in the air is different,
resulting in different curvatures of the spine, the center of
mass of the spine remains unchanged. As shown in Fig. 8(b),
if appropriate s are selected to make the bending angles of
the spine in the air the same and only change the rotation
angle  of the spine around the fixed axis, the spine rotates
around the rotation axis mass passing through the center of
mass. As shown in Fig. 8(b), assuming that the spine rotates
around the rotation axis passing through the center of mass
with different bending angles, then we can divide the spine
into three parts. The angular momenta generated by the three
parts around mass are L1, L2 and L3 respectively. Since the
directions of the angular momenta generated by L1, L2 and
L3 are the same:
According to the LOCAM, there must be another angular
momentum in the robot system that is equal in magnitude
and opposite in direction to L to cancel it out, so that the
angular momentum of the entire system remains constant.
Since the robot is symmetric about the plane that passes
through its center of mass and is perpendicular to mass, to
nullify the angular momentum L, the robot can only rotate
about its own axis to alter its attitude relative to the world
coordinate system. Denote the angular momentum generated
by the robots rotation as LB, then
Since the angular momentum is the product of the moment of
inertia and angular velocity:
L  L1  L2  L3
LB  JBB.
Because the spine as a whole rotates around mass at the
same speed, that is 1  2  3. Since the moment of inertia
is related to the mass distribution of the rotating object around
the rotation axis, different  and s of the spine correspond to
different moments of inertia. That is, denote the rotation angle
of the spine around the rotation axis mass as mass, i.e.
J(, s)mass  JBB
According to the law of conservation of energy, mass B.
As shown in the Fig. 8(b), when J(, s)  JB, we can get
mass  B, that is, 1
B. The kinetic
energy generated by the rotation of the spine is completely
converted into the kinetic energy of the robots rotation, which
not only has the highest flipping efficiency but also no energy
loss. However, if J(, s) JB, we can get mass B,
by the rotation of the spine is almost completely lost, the
angular velocity of the spine rotation is large, and the rotation
amplitude of the robot itself is also very small. Therefore, the
smaller J(, s) means, the lower the efficiency of the robots
rotation and the lower the energy conversion efficiency.
for the robots flipping in the air. The solver considers the
relationship between the moment of inertia J and the spine
highest flipping efficiency.
As shown in Fig. 1, due to the expandability of the SGb-
the two ends of the series-connected SGb-SMMS can rotate
in different directions respectively, the series-connected spine
has angular kinetic energy for rotation in different directions.
segment series-connected spine, the LOCAM is as follows:
J1(i, si)1  J2(i, si)2  JBB
The MPC solver considers the relationship between the mo-
ment of inertia Ji(i, si) and the spine joint angles, and can
solve for the control output with the highest flipping efficiency.
C. Training of the GNN
Due to the fact that we only consider the flexibility of in-
dividual SGb-SMMS connected in series, and the connections
between joints are relatively simple, the GNN can be designed
as a 3-layer structure.
Based on the dynamic constraints of aerial flip, we make
full use of the powerful learning ability of GNN to study the
moment of inertia of the spine at different bending angles.
We import the URDF model of the spinal model into Gazebo,
and set the Gazebo environment to a zero-gravity environment.
By setting different initial positions of the spinal joints {, s}
and various rotation speeds mass, we get the angular velocity
of spinal self-rotation B in Gazebo.
Then the relationship between the moment of inertia as:
datasets
{P1, P2,    Pn}, and DJ  {J1, J2,    Jn} corresponding
to the points of this dataset. And the designed 3-layer GNN
consists of an MLP layer, a feature aggregation layer, and an
MLP layer.
After training, the variation relationship between the single
spinal joint Ji and the spinal state {, l} is obtained in
Fig. 9. As analyzed theoretically, the moment of inertia Jof the
SGb-SMMS increases with the growth of the bending angle.
At the same mass, the spinal self-rotation speed B rises,
enabling more efficient conversion of the motor-generated
angular kinetic energy into spinal self-rotation kinetic energy.
Given this complex situation, it is extremely difficult to
determine the inherent relationship Ji between the dynamic
parameters and the joint angle through conventional dynamic
analysis methods, such as Lagrange methods . The clas-
sical methods can only estimate Ji by approximating the
spherical gear as an equivalent regular rigid body.
Fig. 9: The relationship between a single spinal joint Ji and
the spinal state s.
TABLE I: The MSE of different methods for SGb-SMMS.
equivalent
We employed the classical equivalent rigid-body method
(equivalent), MLP, and GNN networks to predict the Ji for
SGb-SMMS with number of spherical gears ng ranging from
4 to 10. GNN and MLP are designed with nearly identical
parameter counts (500 epochs and a learning rate of 0.01),
using the Mean Squared Error (MSE: 1
P(y y)2 where n
is batchsize, yy represents the predicted error). In Table I, the
network-based methods significantly outperform the equivalent
method. MLP performs well when ng < 6 but degrades
with more serial gears. GNN shows good generalization and
inverse-deduction abilities for over 5 serial gears.
V. EXPERIMENT RESULTS
In experiments, we use various robots with the SGb -
SMMS to test the spinal systems versatility, dexterity, and
robustness. The experiments, divided into basic (precision-load
and flexibility) and advanced (aerial flipping and robustness)
1) Precision-load experiment: The SGb-SMMS carried
weights and rotated about a fixed axis to verify its strength,
2) Flexibility experiment: In the flexibility experiment, two
SGb-SMMS units were spliced to test the DoF of the combined
spine rotating around various axes, verifying its structural
expandability and enhanced flexibility.
3) Aerial flipping experiment: In this experiment, both
a single-SGb-SMMS robot and a double-SGb-SMMS robot
were dropped from a height in different initial postures to
verify that the spine and algorithm can mimic the flexible
structure and behavior of natural spinal organisms, as well
as the effectiveness of enhancing flexibility through serial
connection.
4) Robustness experiment: In this experiment, we drop
the single-SGb-SMMS robot from a height with randomly
designed initial angular kinetic energies, then conduct com-
parative and repeated tests against other methods to validate
the robustness and reliability of our proposed algorithm.
A. Experiment setup
In this experiment, four experimental platforms are utilized.
Fig. 10(a) represents the platform for the precision-load exper-
Fig. 10: experimental platform. (a): Spinal strength and preci-
sion test platform. (b): Dual-SGb-SMMS connection flexibility
test platform. (c): The single-SGb-SMMS robot. (d): The
double-SGb-SMMS robot consists spine 1 and spine 2.
has two degrees of freedom and can rotate around a fixed axis.
Fig. 10(b) shows the experimental platform for the flexibility
experiment. This platform has DoFs to rotate around multiple
axes. Fig. 10(c) shows a single-SGb-SMMS robot, in which
the spinal joints can only bend at the same angle. Fig. 10(d)
presents a double-SGb-SMMS robot. It has 3-DoF, and the
two segments of SGb-SMMS can bend in different directions.
The spine of the robot is equipped with Wits six-axis
IMU to obtain the robots posture and acceleration accurately.
to gather information such as the position, velocity, and angu-
lar velocity of the robots movement. The robot is controlled
by a NUC computer. The driving motor for the spinal joints
is a Gyber motor, and the solver for the MPC optimization
problem is Acados.
B. Analysis of precision-load experiment
Since the length and load of the SGb-SMMS are inversely
proportional to the precision, it is a great challenge to balance
the flexibility, precision, and strength of the spinal joints. The
platform for the load experiment is shown in Fig. 10(a). When
gravitational pull. We then perform circular motion around
the bent spine axis; the trajectorys projection on plane
perpendicular to the spinal axis is circular. Finally, we convert
the target trajectory to the world coordinate system and, via
inverse kinematics, transform it into spinal joint control angles.
Because the spinal structure is rigid, its load-bearing ca-
pacity is determined by the driving motors. The spinal joints
employ GyberGear motors, which have a continuous torque
of 4 N  m, a spinal joint length of 0.40 m, and a motor
self - weight of 0.317 kg. Theoretically, the SGb-SMMS load
should not exceed 1.3 kg. We performed load experiments on
the SMMS with loads of 0 kg and 1.2 kg.
Fig. 11: The trajectory of the projection of the end of SGb-
SMMS on the  plane.
It can be seen in Fig. 11 that the SGb-SMMS can flexibly
and stably follow the circular trajectory under free-load and a
load of 1.2 kg. With no load, the SGb-SMMS tracks the target
trajectory accurately, with an average error of within 0.002 m.
When the load is 1.2 kg, the spine maintains accurate tracking
with an error within 0.004 m. Therefore, this experiment
proves that our SGb-SMMS structure 1) can flexibly track
circular trajectories, 2) has a large load-bearing capacity, and
3) features high precision.
C. Analysis of flexibility experiment
The end of a single-SGb-SMMS can rotate around a fixed
axis by the LOCAM. In the tandem double-SGb-SMMS, the
two ends can rotate in different directions, giving it more
DoFs for multi-axis rotation. To verify the flexibility and
expandability of the proposed spine structure, the experiment
has three parts: 1) Double-SGb-SMMS rotates around the
bodys x-axis via joint movement; 2) Around the y-axis; 3)
Around the z-axis.
As shown in Fig. 12(a), the double-SGb-SMMS can achieve
the self-rotation around the bodys x-axis by continuously
bending two SGb-SMMS in the same direction by the same
angle. In Fig. 12(b), The double-SGb-SMMS can achieve the
self-rotation around the bodys y-axis by first rotating one
SGb-SMMS around the y-axis, then rotating the other SGb-
SMMS around the y-axis, and finally restoring both SGb-
SMMS to their initial states simultaneously. Similarly, the
spinal joints can rotate around the bodys z-axis as shown in
Fig. 12(c). Therefore, we have verified the expandability and
higher flexibility of the SGb-SMMS proposed in this paper.
Its modular design can be applied to different spine robots
according to the needs of practical applications, enabling more
flexible movements.
D. Analysis of aerial flipping experiment
A single SGb-SMMS can flip in one direction, allowing the
spinal robot to land legs-down from a high-altitude back-down
drop. The double-SGb-SMMS robot has more flexible degrees
of freedom, enabling it to flip from back-down to back-up and
rotate around the bodys z-axis in the air to adjust the landing
orientation. To verify the proposed spinal electromechanical
systems ability to flexibly mimic natural organisms spinal
structures and behaviors, both single-SGb-SMMS and double-
(a) The process of the spine rotating around the x-axis.
(b) The process of the spine rotating around the y-axis.
(c) The process of the spine rotating around the z-axis.
(d) The motion trajectory diagram of the single-
SGb-SMMS robot flipping after falling from the
height of 2.8 m.
Fig. 12: Flow schematic illustrations for the flexibility experiment and the aerial flipping experiment
SGb-SMMS robots shown in Fig. 10 are tested for flipping to
the target state under various initial conditions.
The experiment has two parts: 1) A single-SGb-SMMS
robot is dropped from 2.8 m with initial roll angles of
[90, 135, 180, 135, 90]. Our algorithm enables it to
quickly flip to a legs-down posture around the x-axis in the
shortest time; 2) A double-SGb-SMMS robot is dropped from
2.8 m and rotates to the target posture around the x-axis and
z-axis respectively.
As the robot dropped from 2.8 m lands in 0.8 s, it
must flip to the target posture within this time. Figs. 12(d)
and 13(a) show that a single-SGb-SMMS robot can fall from
2.8 m and land on all four feet, autonomously planning the
shortest path to the legs-down posture from various initial
roll angles. Figs. 13(a) and 13(a) indicate that the robots
rotation during flipping adheres to the LOCAM, with the
controller maintaining Ji at its maximum of 0.4021. The robot
can execute a 180 flip from a back-down posture to a legs-
down one within 0.6 s, confirming that the proposed control
algorithm emulates falling-cat motion effectively.
Fig. 13(b) shows the attitude-angle changes of the double-
SGb-SMMS robot rotating around the bodys x-axis and the
z-axis in the air. With an initial roll angle of 150, the
double-SGb-SMMS robot can flip around the x-axis to a
four-legs-down posture and rotate around the z-axis unaided,
shifting the x-axis orientation from 0to 48. This verifies
that the proposed spinal system can achieve multi-DoF flips
via structural expansion, and the control algorithm enables
multi-axis flips. Therefore, the cat-falling experiment verifies
that the proposed spinal electromechanical system: 1) has the
flexibility to actively minic biological dynamic behaviors; 2)
has strong expandability in flexible tasks. It is proved that in
practical applicatio
