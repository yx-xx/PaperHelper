=== PDF文件: emg2tendon From sEMG Signals to Tendon Control in Musculoskeletal Hands.pdf ===
=== 时间: 2025-07-22 15:46:37.410066 ===

请你只输出如下JSON，所有字段都必须有，且每个“关键词”字段只允许输出一个最核心的最有代表性的中文关键词，要中文关键词（不能是英文，不能是多个，不能有逗号、分号、空格），否则视为不合格。不要输出任何解释或正文，只输出JSON。
{
  "论文标题": "",
  "研究主题关键词": "",
  "应用场景关键词": "",
  "主要方法关键词": "",
  "创新点关键词": "",
  "主要结论关键词": ""
}
内容：Control in Musculoskeletal Hands
Sagar Verma
Micropilot
Figure 1. We introduce the emg2tendon dataset, an extension of emg2pose, for learning tendon control signals from sEMG
signals. The bottom row presents hand poses for the gestures (Shaka, Vulcan, and Peace) sourced from the emg2pose
AbstractTendon-driven robotic hands offer unparalleled dex-
terity for manipulation tasks, but learning control policies for
such systems presents unique challenges. Unlike joint-actuated
robotic hands, tendon-driven systems lack a direct one-to-one
mapping between motion capture (mocap) data and tendon
are prone to occlusions and inaccuracies, further complicating
joint tracking. Wrist-wearable surface electromyography (sEMG)
sensors present an inexpensive, robust alternative to capture
hand motion. However, mapping sEMG signals to tendon control
remains a significant challenge despite the availability of EMG-
to-pose data sets and regression-based models in the existing
literature.
We introduce the first large-scale EMG-to-Tendon Control
dataset for robotic hands, extending the emg2pose dataset, which
includes recordings from 193 subjects, spanning 370 hours and
29 stages with diverse gestures. This dataset incorporates tendon
control signals derived using the MyoSuite MyoHand model,
addressing limitations such as invalid poses in prior methods.
We provide three baseline regression models to demonstrate
emg2tendon utility and propose a novel diffusion-based regression
model for predicting tendon control from sEMG recordings.
This dataset and modeling framework marks a significant step
forward for tendon-driven dexterous robotic manipulation, laying
the groundwork for scalable and accurate tendon control in
robotic hands.
I. INTRODUCTION
The human hand, with its exceptional dexterity and com-
for complex manipulation tasks. From assembling small com-
ponents in manufacturing to performing intricate surgical pro-
offer the highest level of control and adaptability . How-
capture and depth sensors [24, 21, 18], suffer from occlu-
making them impractical for continuous real-world use. Wrist-
worn surface electromyography (sEMG) sensors provide a
viable alternative by capturing neuromuscular signals that
drive hand movement . Mapping sEMG to tendon control
signals enables natural and responsive robotic hand operation,
with significant implications for prosthetics, teleoperation, and
human-robot interaction .
Anthropomorphic hands require intricate joint mechanisms,
including hinges, linkages, and tendon-driven actuators, to
achieve human-like movement [44, 48, 52, 20]. Unlike non-
anthropomorphic robotic designs [27, 29, 55], which lack a
direct mapping to human motion, tendon-driven hands offer
greater biomechanical accuracy and compliance. The human
hands evolved structure is optimized for dexterous interac-
modate it. Ensuring a one-to-one mapping between human and
robotic hands in mechanical design and control enhances tele-
Advances in imitation learning, particularly diffusion-based
models [8, 35, 53], enable more efficient policy learning com-
pared to traditional reinforcement learning [34, 28], allowing
robotic hands to perform nuanced, real-time interactions.
sEMG-based sensing eliminates the limitations of vision-
based tracking by directly capturing the electrical potentials
generated by muscle activations [12, 33]. Rather than mapping
sEMG signals directly to joint angles, an alternative and
more robust approach is to infer movement through a mus-
culoskeletal hand model that operates based on tendon-driven
actuation . This method ensures biologically consistent
pose estimation and provides a stable framework for learning
and predicting control signals. By integrating sEMG signals
with tendon-driven control, robotic hands can achieve a level
of dexterity and responsiveness closer to that of the human
and teleoperated systems.
In this work, our objective is to advance research on EMG-
to-tendon control models for anthropomorphic hand control
by extending the existing emg2pose dataset. Our contributions
are as follows:
First large-scale dataset: We introduce the first large-
scale dataset specifically designed for EMG-to-tendon
control signals, extending the emg2pose dataset with
recordings from 193 subjects, 370 hours of data, and 29
stages of diverse gestures.
Comprehensive
extensive
benchmarking
framework
to-tendon control, tendon control-to-pose and direct
EMG-to-pose mappings.
Conditional Latent Diffusion Models (CLDM): We
present a novel approach using conditional latent diffu-
sion model to achieve highly accurate musculoskeletal
hand control signal prediction from sEMG recordings.
The paper is organized as follows: Section II discusses
related work, covering sensors (optical and sEMG) for pose
including
diffusion
reinforcement
learning. Section III provides background on musculoskeletal
hand models and sEMG, establishing the relationship between
sEMG data and muscle movements. Section IV details the
extension of the emg2pose dataset to emg2tendon. Section V
introduces the benchmark experiments and explains the
conditional latent diffusion model for modeling the EMG-to-
tendon relationship. Section VI presents an extensive ablation
study comparing EMG-to-tendon-to-pose and direct EMG-
to-pose approaches. Section VII discusses the limitations
of the proposed dataset and methods. Finally, Section VIII
concludes the paper and discusses future research directions.
II. RELATED WORK
A. Pose from Vision
Vision-based pose estimation primarily uses depth, RGB, or
both as inputs alongside large open-sourced datasets [14, 36,
based motion capture systems , which provide high-quality
labels but create distributional shifts during deployment due
to the absence of markers in real-world applications. Alternate
labeling methods, such as multi-view camera systems [9, 15],
synthetic datasets , or magnetic sensors , often result in
lower-quality labels. While motion capture markers are well-
suited for obtaining high-quality labels for surface electromyo-
graphy (sEMG), they do not interfere with the data used for
predictions. Vision-based datasets largely focus on static hand
B. Pose from sEMG
Several studies have investigated hand pose regression us-
ing sEMG signals. Liu et al. , for example, used the
MyoBand to estimate hand poses during various movements,
collecting data from 11 participants. Their study assessed
sEMG decoding models for hand pose across users and
sessions using convolutional  and LSTM architectures.
to collect datasets from 13 participants, employing custom
3D convolutional architectures to predict hand joint angles,
landmark positions, and grip forces. Both studies reported low
error rates on held-out test sets within participants. However,
these datasets are limited in scale, featuring only 11 to 13
participants with short recording durations of 15 to 20 minutes
per participant, which restricts generalization across users.
In contrast, the emg2pose dataset , collected using the
sEMG-RD wristband from CTRL-labs at Reality Labs et
al. , stands as the largest dataset available, providing a
comprehensive one-to-one mapping between sEMG recordings
and hand joint poses.
C. Tendon based Actuation
Musculoskeletal models [30, 25, 41, 13, 43] have been de-
veloped to simulate the kinematics of muscles and physiolog-
ical joints. While these models provide valuable insights, their
high computational demands and limited support for contact
forces restrict their utility for studying complex hand-object
limitations. MyoHand supports contact-rich interactions and is
computationally efficient for data-driven exploration. Several
methods have been developed for MyoHand to perform in-
hand manipulation of simple objects such as balls, pens, and
cubes [5, 49], demonstrating its capability for tendon-driven
manipulation tasks.
D. Control Policies
Data-driven control approaches, particularly Reinforcement
Learning
demonstrated
dexterous
manipulation
joint-based
control [38, 23, 37, 7]. RL techniques have been applied
to enable naturalistic movements, often utilizing motion
capture data to learn complex behaviors [32, 31, 16]. For
biomechanical models, control policies have been adapted
to muscle actuators to produce more naturalistic behaviors.
Unlike robotic joint-based control, biomechanical systems
face challenges due to their over-actuated control spaces,
which hinder exploration efficiency . Machine learning
reinforcement learning [19, 42, 17, 5, 51, 49], have been
used to synthesize behaviors such as walking, running,
reaching movements, and biped locomotion. While significant
progress has been made in in-hand object rotations and
stylistic movements [49, 6], complex dexterous hand-object
manipulations remain a challenging frontier in this domain.
III. BACKGROUND
We begin with a brief overview of: (i) the physiologically
accurate musculoskeletal hand model (ii) the neuro-muscular
interactions during finger muscle activations and how it man-
ifests as EMG sensor data.
A. Musculoskeletal Hand Model
Figure 2.
Anatomical structure of the human hand, showing key joints.
The human hand consists of four fingers and a thumb, each
with multiple joints that enable fine motor control and dex-
terous manipulation. Figure 2 illustrates the skeletal structure
of the human hand, highlighting key joints responsible for
complex articulation. The four fingers comprise three primary
langeal (PIP), and distal interphalangeal (DIP) joints. The PIP
and DIP joints each have a single degree of freedom (DoF),
allowing flexion and extension, while the MCP joint possesses
two DoFs: flexionextension and adductionabduction. This
results in a total of four DoFs per finger.
The thumb has a distinct anatomical structure com-
pared to the fingers. It includes an interphalangeal (IP)
joint with a single DoF for flexionextension, while its
MCP and trapeziometacarpal (TM) joints allow for both
flexionextension and adductionabduction. Consequently, the
thumb has five DoFs, making it essential for opposable
grasping. Additionally, wrist motion contributes six DoFs,
encompassing translation and rotation. The overall range of
Figure 3. The MyoHand model in MyoSuite. From left to right, green arrows
indicate joint articulation, fingertip movement, and in-hand manipulation of
baoding balls, showcasing the models tendon-driven control and dexterous
capabilities.
motion varies, with adductionabduction movements having a
more limited range compared to flexionextension.
To replicate human hand motion in robotic and prosthetic
musculoskeletal
developed.
MyoSuite
MyoHand model, which accurately represents human hand
including
tendon-driven
actuation.
direct joint-controlled robotic hands, MyoHand employs
a tendon-based system, where tendons transmit forces to
generate joint movements, mimicking biological muscle-
tendon dynamics. This allows for greater compliance and
adaptability in interaction with objects.
To ensure biomechanical accuracy, MyoHand incorporates
constraints derived from human hand kinematics. For example,
normal flexion of the DIP joint is often coupled with PIP
joint movement, and the MCP joint significantly limits the
PIP range of motion. Such constraints are naturally captured in
tendon-driven models, making them more effective in replicat-
ing human dexterity than traditional joint-based robotic hands.
By leveraging inverse dynamics, we use MyoHand to generate
tendon control signals corresponding to observed hand poses,
providing a biologically plausible pathway for translating
sEMG signals into tendon-driven robotic hand movements.
B. EMG Sensor Model
Electromyography (EMG) sensors measure the electrical
potentials generated by skeletal muscles during neurological
activation. These signals provide essential insights into the
temporal dynamics and morphological behavior of motor units
responsible for muscle movement . EMG signals play a
crucial role in detecting and predicting muscle-driven body
movements and are widely used for diagnosing neuromuscular
To understand the muscular involvement in finger move-
hand articulation. The Extensor Pollicis Longus facilitates
thumb extension, while the Abductor Pollicis Proprius is
involved in extending the index finger. The Extensor Digi-
torum controls extension of the four medial fingers, and the
Extensor Digiti Minimi specifically targets the little finger.
Finger adduction and abductionmovements toward or away
from the midlineare governed by the Volar Interossei and
Dorsal Interossei, which attach to the proximal phalanx and
Extensor Digitorum. Several additional muscles contribute to
broader hand and arm movements, including the Supinator
for forearm rotation, the Anconeus and Brachioradialis for
elbow control, and the Extensor Carpi Ulnaris, Extensor Carpi
Radialis Longus, and Extensor Carpi Radialis Brevis for wrist
movement. In this study, we primarily focus on the muscles
directly involved in fine finger control.
Some of these muscles are located near the skin surface
and can be easily detected using surface EMG (sEMG),
while others, such as the Extensor Indicis, are deeper within
the forearm. Previous research  has established a strong
correlation between EMG signals and basic hand movements,
highlighting the activation patterns of flexors and extensors.
EMG signal generation in response to muscle activations,
though a detailed discussion of these models is beyond the
scope of this work.
IV. PROPOSED DATASET
In this section, we begin by summarizing the existing
emg2pose dataset, which serves as the foundation for our
work. We then detail the process of generating emg2tendon.
A. emg2pose Dataset: Brief Overview
Here is the revised version, condensed into three paragraphs
while maintaining clarity and key details:
In this paper, we build upon the emg2pose dataset intro-
duced by Salter et al. , the largest publicly available
sEMG dataset to date. This dataset was collected using a 16-
channel bipolar sEMG-RD wristband developed by CTRL-
labs at Reality Labs , alongside a 26-camera motion
capture array operating at 60 Hz (Prime 13W OptiTrack).
Participants wore sEMG-RD bands on both wrists and 19
motion capture markers on each hand, strategically placed at
key joint locations, including the fingernail bases, between
the DIP, PIP, and MCP joints, and at essential points on
the thumb and dorsal hand. This setup enabled simultaneous
high-resolution recording of muscle activity and precise hand
motion tracking.
sEMG data were sampled at 2 kHz, while motion capture
data were recorded at 60 Hz and later processed using an
inverse dynamics solver to reconstruct hand joint angles. Due
to simultaneous marker occlusions, 12.7 of the frames could
not be processed and were interpolated to match the 2 kHz
sEMG sampling rate. Participants performed structured 45 to
120-second sessions containing 3-5 gestures in randomized
order or unconstrained freeform movements, capturing a wide
range of hand motions. Most participants contributed four
dataset includes 193 participants, covering 370 hours, 751
B. Pose to Tendon Control Signals
There are no direct pose-to-tendon or EMG-to-tendon
datasets available, as capturing tendon movement in vivo is
highly challenging. However, biophysical models describing
the kinematics of tendon-driven finger joint motion exist in
the literature . To overcome this limitation, we use the
inverse dynamics of the MyoSuite hand model to compute
tendon control signals corresponding to the pose data in the
emg2pose dataset.
1) Muscle Actuator Dynamics: In biomechanics, a muscle-
tendon actuator consists of a muscle and a tendon connected
in series. MuJoCo implements this by modeling the tendon as
the entity with spatial properties (such as length and velocity),
while the muscle is represented as a force-generating mecha-
nism that applies tension to the tendon. Thus, in MuJoCo, the
tendon length corresponds to the sum of the biological muscle
and tendon lengths:
actuator length  LT  LM
biological
varies dynamically.
The optimal resting muscle length, denoted as L0, is the
length at which the muscle produces its peak active force
at zero velocity. Due to the complexity of tendon routing
and wrapping, directly specifying L0 and LT is impractical.
predefined scaling relationships. The scaled muscle length and
velocity are given by:
L  actuator length LT
V  actuator velocity
where the range constraints for muscle length, typically set
as (0.75, 1.05), are used to determine L0 and LT .
The force-length-velocity (FLV) function models the active
and passive forces generated by the muscle:
FLV (L, V, act)  FL(L)  FV (V )  act  FP (L)
muscle length, - FV (V ) represents active force as a function of
accounts for passive forces that are independent of activation.
The total muscle force applied to the actuator is:
actuator force  FLV (L, V, act)  F0
where F0 is the peak active force at zero velocity, related
to the muscles physiological cross-sectional area (PCSA). If
actuator acc0
where actuator acc0 represents the joint acceleration caused
by unit force applied to the actuator transmission.
The activation state of a muscle is governed by a first-order
nonlinear filter that depends on the control signal:
Pose to Tendon
Inverse Dynamics
MoCap Hand Pose
MyoHand Pose
sEMG Signal
Tendon Control Signal
Figure 4.
Overview of the emg2tendon data collection and processing pipeline. The top-left section illustrates the emg2pose dataset collection, where hand
gestures (Shaka, Vulcan, and Peace) are captured using a motion capture (MoCap) system and a wrist-worn sEMG device. The top-right section represents
the MyoSuite-based musculoskeletal hand model, which enables pose-to-tendon control mapping through inverse dynamics. The bottom-left plot shows the
recorded sEMG signals from 16 channels, while the bottom-right plot depicts the computed 39 channel tendon control signals.
dtact  ctrl act
(ctrl, act)
where ctrl represents the input control signal, clamped
within [0, 1]. The activation time constant (ctrl, act) is
defined as:
(ctrl, act)
ctrl act > 0
deact  (0.5  1.5  act),
ctrl act 0
where act and deact represent the activation and deactiva-
tion time constants, respectively. To ensure smooth transitions,
MuJoCo introduces an optional smoothing parameter, smooth,
which interpolates between activation and deactivation dynam-
ics using a sigmoid function:
2) Computation of control signals: The control signal ctrl
is determined by solving the following muscle actuator equa-
act  timestep  ctrl act
bias represent actuator gain and bias, - qfrc is the joint force,
and -  is computed as:
D  (A D)  sigmoid
ctrl act
To efficiently solve for ctrl, we reformulate the equation as
a quadratic program (QP):
2xT Px  qT x,
where the sigmoid function is approximated to enable
efficient optimization. Using this approximation, the equation
is rewritten as:
AM  x  k  0
timestep  gain
ctrl act
(ctrl act)  1  2
k  AM  (gain act)  AM  bias qfrc
From the QP formulation, we define:
P  2  AM T  AM,
q  2  AM T  k
The bounds for optimization are:
lb  timestep  gain
ub  timestep  gain
act  1  2
After solving for x, the control signal ctrl is computed as:
ctrl  act
timestep  gain x  1
This framework enables us to compute tendon control
signals for the emg2pose dataset, allowing its extension into
emg2tendon for tendon-driven robotic hand control.
C. Tendon Control Signals Generation
Figure 4 provides an overview of the emg2tendon data
processing workflow. The emg2pose dataset provides hand
pose recordings with 20 joints, whereas the MyoHand mus-
culoskeletal model  consists of 23 joints. To ensure com-
patibility between these datasets, we mapped all finger joints
from emg2pose to MyoHand, covering five fingers, each
with four joints. However, three wrist-related jointspro-
supination (pro sup), radial-ulnar deviation (deviation), and
flexion-extension (flexion)are excluded, as they are not
explicitly modeled in emg2pose.
To compute tendon control signals, we applied inverse
dynamics to all pose recordings in emg2pose using the Myo-
Hand model, yielding 39 tendon control signals. However, in
21 sessions, the IK solver failed due to multiple occlusions
in the pose data, resulting in infeasible joint configurations
for MyoHand. To expedite these computations, we leveraged
the MyoSuite MyoHand model, which we observed to run
approximately five times faster on Apple Silicon compared to
x86 64 or ARM-based systems. Using a distributed setup of
15 Mac Mini devices (4  M1, 6  M2, 5  M3), we processed
inverse dynamics across all 25,254 sessions, completing the
full dataset transformation in 46 hours.
To align the data format with MyoHands simulation re-
to 500 Hz before running the IK solver. The computed tendon
control signals were then upsampled back to 2 kHz to match
the original emg2pose dataset, ensuring that sEMG signals,
joint poses, and tendon control forces remain synchronized
at a uniform sampling rate. This pipeline facilitates seamless
model training and analysis by providing a structured approach
to tendon-driven hand motion estimation.
V. EXPERIMENTS
In this section, we demonstrate the applicability of the
proposed emg2tendon dataset by training regression models
to predict tendon control signals from sEMG recordings. To
evaluate the effectiveness of this approach, we compare it
with EMG-to-pose regression and tendon-to-pose regression
models. This enables us to assess the impact of an intermediate
tendon representation on final pose estimation by analyzing the
difference between direct EMG-to-pose mapping and a two-
step approach (EMG tendon pose).
gression model are applied to the MyoSuite MyoHand model
to generate hand pose estimations through simulation. This
allows us to compare learned regression models with biome-
chanically accurate physics-based pose estimation.
For these experiments, we use three baseline models from
Conditional Latent Diffusion Model (CLDM) as our proposed
approach for EMG-to-tendon regression.
A. Conditional Latent Diffusion Model (CLDM)
Several methods have been developed to apply diffusion
models to time-series data, particularly in healthcare applica-
tions. We follow a similar approach, structuring the training
into three main stages. First, we train two autoencoders with
Kullback-Leibler (KL) regularization to compress data into a
latent vector representation. One autoencoder is designed for
the output signal (tendon control signals), while the other is
for the input signal (sEMG recordings), which serves as the
conditioning input for the diffusion model. Figure 5 shows the
CLDM architecture including the autoencoders.
Once trained, we use the frozen encoder of the output
autoencoder to extract latent vectors, which are then processed
through a diffusion model. The diffusion process involves
gradually adding noise to the latent representation over mul-
tiple time steps and then using a learned reverse process to
reconstruct the original data. The reverse diffusion process is
conditioned on the latent encoding of the input signal, en-
suring that the model learns meaningful correlations between
sEMG and tendon control signals. The final output is decoded
using the decoder of the output autoencoder, reconstructing
the predicted tendon control signals. This approach ensures
that both input and output signals share a common latent
activations and tendon-driven hand movements.
During inference, we generate a random noise sample
from a Gaussian distribution, learned during training, and
condition it using the latent vector from the input autoencoder.
This conditioned latent representation is then passed through
the reverse diffusion process, and the final predicted tendon
control signals are obtained by decoding the output.
The autoencoder architecture consists of an Encoder and
Attention Blocks, and DownsamplingUpsampling Blocks. For
Forward Diffusion Process
AutoEncoder
Kullback-Leibler
AutoEncoder
Kullback-Leibler
Tendon Control
Attention Residual
Tendon Control
Figure 5.
Training stages of Conditional Latent Diffusion Model (CLDM) to predict tendon control signals from sEMG recordings.
the diffusion process, we employ a UNet-based architecture,
which effectively refines the latent representations over mul-
tiple diffusion steps.
B. Networks Training
To evaluate different approaches for predicting hand pose
and tendon control signals from sEMG signals, we train
multiple neural network architectures under three key tasks.
1) Pose regression from EMG: We train Time-Depth
Separable (TDS) Network, NeuroPose, and Sensing-
Dynamics to directly predict joint poses from EMG
signals. Additionally, we introduce a Conditional Latent
Diffusion Model (CLDM) where two autoencoders are
first trainedone for joint poses and another for sEMG
recordings. The CLDM is then trained to predict joint
poses conditioned on the latent representation of EMG.
2) Tendon control signals regression from EMG: We
train the same baseline models (TDS, NeuroPose, and
SensingDynamics) to predict tendon control signals from
EMG recordings. Similar to pose regression, we train
an autoencoder specifically for tendon control signals
and then apply CLDM to model tendon control signal
prediction conditioned on EMG signals.
3) Pose regression from tendon control signals: Here, we
train TDS, NeuroPose, and SensingDynamics to predict
joint poses from tendon control signal data. Additionally,
we train a CLDM model, where tendon control signals
serve as the conditioning input for predicting hand pose.
autoencoders
16-channel
latent space with a four-layer encoder-decoder structure
[32, 64, 64, 64] and attention at all levels. Using these pre-
trained encoders, we train three CLDMs. The CLDM ar-
chitecture employs a UNet-based diffusion process with a
sample size of 4000, extra conditioning channels set to 16, and
downsampling across four blocks [32, 64, 128, 256]. The noise
schedule follows a linear progression with 1000 timesteps
(start  0.0001, end  0.02), and training is performed
using the Adam optimizer (104 learning rate) with a Reduce-
on-Plateau scheduler. For baseline models (TDS, NeuroPose,
SensingDynamics), we adopt the same architecture configu-
rations and training settings as in emg2pose. All models are
trained on a single NVIDIA GH200 system with a 96GB H100
Ubuntu 22.04.5. To evaluate performance, we use angular error
as the primary metric for pose regression. For the prediction
of the tendon control signal, we report the root mean square
error (RMSE) and the mean absolute error (MAE).
VI. RESULTS
In this section, we present the evaluation results of our
trained models for predicting both tendon control signals and
joint poses from sEMG signals. We analyze the performance
of different regression approaches and assess the impact of
using tendon control signals as an intermediate representation
for pose estimation.
We begin by reporting results for direct EMG-to-pose
Test Set
sEMG-to-Pose
Tendon-to-Pose
Two-Step
Two-Step Simulation
SensingDynamics
NeuroPose
SensingDynamics
NeuroPose
SensingDynamics
NeuroPose
Table I. Comparison of mean angular error (lower is better) for different pose estimation methods. CLDM consistently outperforms the three baselines,
achieving the most accurate pose predictions. Bold values indicate statistically significant improvements.
sion and tendon control signal-to-pose regression. Next, we
evaluate the two-step regression approach (EMG tendon
control signals pose) to determine whether tendon control
signals provide a meaningful intermediary representation for
improved pose estimation. Finally, we compare this method
with a physics-informed approach, where the predicted tendon
control signals are applied to the MyoSuite MyoHand model
to generate pose estimations through simulation.
Table I presents the pose estimation results for different
models trained to predict joint angles using five different
EMG-to-Pose mapping), 2) pose regression from tendon
control signals (tendon-to-pose mapping), 3) two-step pose
followed by joint pose estimation, and 4) two-step pose estima-
tion with simulation: using MyoSuites physics-based model
to infer joint poses from predicted tendon control signals.
The table reports mean angular error  standard deviation
across users, computed in the same manner as emg2pose.
Bold values indicate statistical significance under a Wilcoxon
signed-rank test, comparing emg2pose against NeuroPose and
SensingDynamics.
Table II shows Root Mean Squared Error (RMSE) and
Mean Absolute Error (MAE) for networks trained to predict
tendon control signals from sEMG recordings. These models
are critical in both two-step regression variants, as they enable
tendon control signal estimation from EMG before final pose
inference.
A. Pose Regression from sEMG Signals
Directly predicting hand pose from sEMG signals shows
CLDM achieving the lowest angular error (11.3  1.0)
across users, significantly outperforming all baseline models.
Compared to TDS (12.2  1.3) and NeuroPose (13.2
Test Set
SensingDynamics
NeuroPose
SensingDynamics
NeuroPose
SensingDynamics
NeuroPose
Table II. Comparison of RMSE and MAE for tendon force prediction
models. CLDM achieves the lowest errors, demonstrating superior accuracy
compared to the three baselines. Bold values indicate statistically significant
improvements.
1.1), the diffusion-based model benefits from better temporal
smoothing and uncertainty modeling, reducing errors by 7.4
over TDS and 14.3 over NeuroPose.
B. Tendon Control Signals Regression from sEMG Signals
CLDM als
